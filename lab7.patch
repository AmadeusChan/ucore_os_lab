diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/.badarg.log lab7/.badarg.log
--- /home/amadeus/ucore_os_lab/labcodes/lab7/.badarg.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.badarg.log	2018-03-23 10:03:18.716152705 +0800
@@ -0,0 +1,334 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc010002a (phys)
+  etext  0xc010d3d1 (phys)
+  edata  0xc01c2bb4 (phys)
+  end    0xc01c5e64 (phys)
+Kernel executable memory footprint: 792KB
+ebp:0xc0131f48 eip:0xc0100b45 args:0x00010094 0x00010094 0xc0131f78 0xc01000c5
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc0131f58 eip:0xc0100e31 args:0x00000000 0x00000000 0x00000000 0xc0131fc8
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0131f78 eip:0xc01000c5 args:0x00000000 0xc0131fa0 0xffff0000 0xc0131fa4
+    kern/init/init.c:59: grade_backtrace2+19
+ebp:0xc0131f98 eip:0xc01000e7 args:0x00000000 0xffff0000 0xc0131fc4 0x0000002a
+    kern/init/init.c:64: grade_backtrace1+27
+ebp:0xc0131fb8 eip:0xc0100104 args:0x00000000 0xc010002a 0xffff0000 0xc010006d
+    kern/init/init.c:69: grade_backtrace0+19
+ebp:0xc0131fd8 eip:0xc0100125 args:0x00000000 0x00000000 0x00000000 0xc010d3e0
+    kern/init/init.c:74: grade_backtrace+26
+ebp:0xc0131ff8 eip:0xc010007a args:0x00000000 0x00000000 0x0000ffff 0x40cf9a00
+    kern/init/init.c:33: kern_init+79
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07ee0000, [00100000, 07fdffff], type = 1.
+  memory: 00020000, [07fe0000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31798
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "badarg".
+fork ok.
+badarg pass.
+Iter 1, No.0 philosopher_sema is eating
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 1, No.2 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.3 philosopher_condvar is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is eating
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.2 philosopher_condvar is thinking
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.4 philosopher_condvar is thinking
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_sema is thinking
+Iter 4, No.0 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 1, No.4 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+Iter 2, No.4 philosopher_sema is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.3 philosopher_condvar is thinking
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+No.2 philosopher_sema quit
+Iter 3, No.3 philosopher_sema is eating
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+No.0 philosopher_condvar quit
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+No.0 philosopher_sema quit
+Iter 4, No.1 philosopher_sema is eating
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+No.2 philosopher_condvar quit
+phi_put_forks_condvar: 1 finished eating
+No.1 philosopher_condvar quit
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.3 philosopher_condvar is eating
+No.1 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.3 philosopher_sema is eating
+Iter 3, No.4 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+No.3 philosopher_sema quit
+Iter 3, No.4 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 3 finished eating
+No.3 philosopher_condvar quit
+Iter 4, No.4 philosopher_condvar is eating
+Iter 4, No.4 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+No.4 philosopher_condvar quit
+No.4 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+ebp:0xc03a9fc8 eip:0xc0100b45 args:0xc01c5e5c 0xc01c5e5c 0x00000002 0x00000000
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc03a9fe8 eip:0xc010ab2a args:0x00000000 0x00000000 0x00000000 0x00000010
+    kern/process/proc.c:475: do_exit+68
+kernel panic at kern/process/proc.c:475:
+    initproc exit.
+
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/.badsegment.log lab7/.badsegment.log
--- /home/amadeus/ucore_os_lab/labcodes/lab7/.badsegment.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.badsegment.log	2018-03-23 10:02:54.368397318 +0800
@@ -0,0 +1,353 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc010002a (phys)
+  etext  0xc010d3d1 (phys)
+  edata  0xc01c2bb4 (phys)
+  end    0xc01c5e64 (phys)
+Kernel executable memory footprint: 792KB
+ebp:0xc0131f48 eip:0xc0100b45 args:0x00010094 0x00010094 0xc0131f78 0xc01000c5
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc0131f58 eip:0xc0100e31 args:0x00000000 0x00000000 0x00000000 0xc0131fc8
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0131f78 eip:0xc01000c5 args:0x00000000 0xc0131fa0 0xffff0000 0xc0131fa4
+    kern/init/init.c:59: grade_backtrace2+19
+ebp:0xc0131f98 eip:0xc01000e7 args:0x00000000 0xffff0000 0xc0131fc4 0x0000002a
+    kern/init/init.c:64: grade_backtrace1+27
+ebp:0xc0131fb8 eip:0xc0100104 args:0x00000000 0xc010002a 0xffff0000 0xc010006d
+    kern/init/init.c:69: grade_backtrace0+19
+ebp:0xc0131fd8 eip:0xc0100125 args:0x00000000 0x00000000 0x00000000 0xc010d3e0
+    kern/init/init.c:74: grade_backtrace+26
+ebp:0xc0131ff8 eip:0xc010007a args:0x00000000 0x00000000 0x0000ffff 0x40cf9a00
+    kern/init/init.c:33: kern_init+79
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07ee0000, [00100000, 07fdffff], type = 1.
+  memory: 00020000, [07fe0000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31798
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "badsegment".
+trapframe at 0xc03b0fb4
+  edi  0x00000000
+  esi  0x00000000
+  ebp  0xafffffa8
+  oesp 0xc03b0fd4
+  ebx  0x00000000
+  edx  0x00000000
+  ecx  0xafffffc0
+  eax  0x00000028
+  ds   0x----0023
+  es   0x----0023
+  fs   0x----0000
+  gs   0x----0000
+  trap 0x0000000d General Protection
+  err  0x00000028
+  eip  0x00800f68
+  cs   0x----001b
+  flag 0x00000286 PF,SF,IF,IOPL=0
+  esp  0xafffffa0
+  ss   0x----0023
+unhandled trap.
+Iter 1, No.0 philosopher_sema is eating
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 1, No.2 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.3 philosopher_condvar is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is eating
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.2 philosopher_condvar is thinking
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.4 philosopher_condvar is thinking
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_sema is thinking
+Iter 4, No.0 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 1, No.4 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+Iter 2, No.4 philosopher_sema is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.3 philosopher_condvar is thinking
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+No.2 philosopher_sema quit
+Iter 3, No.3 philosopher_sema is eating
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+No.0 philosopher_condvar quit
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+No.0 philosopher_sema quit
+Iter 4, No.1 philosopher_sema is eating
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+No.2 philosopher_condvar quit
+phi_put_forks_condvar: 1 finished eating
+No.1 philosopher_condvar quit
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.3 philosopher_condvar is eating
+No.1 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.3 philosopher_sema is eating
+Iter 3, No.4 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+No.3 philosopher_sema quit
+Iter 3, No.4 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 3 finished eating
+No.3 philosopher_condvar quit
+Iter 4, No.4 philosopher_condvar is eating
+Iter 4, No.4 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+No.4 philosopher_condvar quit
+No.4 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+ebp:0xc03a9fc8 eip:0xc0100b45 args:0xc01c5e5c 0xc01c5e5c 0x00000002 0x00000000
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc03a9fe8 eip:0xc010ab2a args:0x00000000 0x00000000 0x00000000 0x00000010
+    kern/process/proc.c:475: do_exit+68
+kernel panic at kern/process/proc.c:475:
+    initproc exit.
+
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/.divzero.log lab7/.divzero.log
--- /home/amadeus/ucore_os_lab/labcodes/lab7/.divzero.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.divzero.log	2018-03-23 10:02:57.512365845 +0800
@@ -0,0 +1,353 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc010002a (phys)
+  etext  0xc010d3d1 (phys)
+  edata  0xc01c2bb4 (phys)
+  end    0xc01c5e64 (phys)
+Kernel executable memory footprint: 792KB
+ebp:0xc0131f48 eip:0xc0100b45 args:0x00010094 0x00010094 0xc0131f78 0xc01000c5
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc0131f58 eip:0xc0100e31 args:0x00000000 0x00000000 0x00000000 0xc0131fc8
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0131f78 eip:0xc01000c5 args:0x00000000 0xc0131fa0 0xffff0000 0xc0131fa4
+    kern/init/init.c:59: grade_backtrace2+19
+ebp:0xc0131f98 eip:0xc01000e7 args:0x00000000 0xffff0000 0xc0131fc4 0x0000002a
+    kern/init/init.c:64: grade_backtrace1+27
+ebp:0xc0131fb8 eip:0xc0100104 args:0x00000000 0xc010002a 0xffff0000 0xc010006d
+    kern/init/init.c:69: grade_backtrace0+19
+ebp:0xc0131fd8 eip:0xc0100125 args:0x00000000 0x00000000 0x00000000 0xc010d3e0
+    kern/init/init.c:74: grade_backtrace+26
+ebp:0xc0131ff8 eip:0xc010007a args:0x00000000 0x00000000 0x0000ffff 0x40cf9a00
+    kern/init/init.c:33: kern_init+79
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07ee0000, [00100000, 07fdffff], type = 1.
+  memory: 00020000, [07fe0000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31798
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "divzero".
+trapframe at 0xc03b0fb4
+  edi  0x00000000
+  esi  0x00000000
+  ebp  0xafffffa8
+  oesp 0xc03b0fd4
+  ebx  0x00000000
+  edx  0x00000000
+  ecx  0x00000000
+  eax  0x00000001
+  ds   0x----0023
+  es   0x----0023
+  fs   0x----0000
+  gs   0x----0000
+  trap 0x00000000 Divide error
+  err  0x00000000
+  eip  0x00800f70
+  cs   0x----001b
+  flag 0x00000286 PF,SF,IF,IOPL=0
+  esp  0xafffffa0
+  ss   0x----0023
+unhandled trap.
+Iter 1, No.0 philosopher_sema is eating
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 1, No.2 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.3 philosopher_condvar is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is eating
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.2 philosopher_condvar is thinking
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.4 philosopher_condvar is thinking
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_sema is thinking
+Iter 4, No.0 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 1, No.4 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+Iter 2, No.4 philosopher_sema is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.3 philosopher_condvar is thinking
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+No.2 philosopher_sema quit
+Iter 3, No.3 philosopher_sema is eating
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+No.0 philosopher_condvar quit
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+No.0 philosopher_sema quit
+Iter 4, No.1 philosopher_sema is eating
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+No.2 philosopher_condvar quit
+phi_put_forks_condvar: 1 finished eating
+No.1 philosopher_condvar quit
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.3 philosopher_condvar is eating
+No.1 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.3 philosopher_sema is eating
+Iter 3, No.4 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+No.3 philosopher_sema quit
+Iter 3, No.4 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 3 finished eating
+No.3 philosopher_condvar quit
+Iter 4, No.4 philosopher_condvar is eating
+Iter 4, No.4 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+No.4 philosopher_condvar quit
+No.4 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+ebp:0xc03a9fc8 eip:0xc0100b45 args:0xc01c5e5c 0xc01c5e5c 0x00000002 0x00000000
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc03a9fe8 eip:0xc010ab2a args:0x00000000 0x00000000 0x00000000 0x00000010
+    kern/process/proc.c:475: do_exit+68
+kernel panic at kern/process/proc.c:475:
+    initproc exit.
+
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/.exit.log lab7/.exit.log
--- /home/amadeus/ucore_os_lab/labcodes/lab7/.exit.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.exit.log	2018-03-23 10:03:21.816121420 +0800
@@ -0,0 +1,338 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc010002a (phys)
+  etext  0xc010d3d1 (phys)
+  edata  0xc01c2bb4 (phys)
+  end    0xc01c5e64 (phys)
+Kernel executable memory footprint: 792KB
+ebp:0xc0131f48 eip:0xc0100b45 args:0x00010094 0x00010094 0xc0131f78 0xc01000c5
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc0131f58 eip:0xc0100e31 args:0x00000000 0x00000000 0x00000000 0xc0131fc8
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0131f78 eip:0xc01000c5 args:0x00000000 0xc0131fa0 0xffff0000 0xc0131fa4
+    kern/init/init.c:59: grade_backtrace2+19
+ebp:0xc0131f98 eip:0xc01000e7 args:0x00000000 0xffff0000 0xc0131fc4 0x0000002a
+    kern/init/init.c:64: grade_backtrace1+27
+ebp:0xc0131fb8 eip:0xc0100104 args:0x00000000 0xc010002a 0xffff0000 0xc010006d
+    kern/init/init.c:69: grade_backtrace0+19
+ebp:0xc0131fd8 eip:0xc0100125 args:0x00000000 0x00000000 0x00000000 0xc010d3e0
+    kern/init/init.c:74: grade_backtrace+26
+ebp:0xc0131ff8 eip:0xc010007a args:0x00000000 0x00000000 0x0000ffff 0x40cf9a00
+    kern/init/init.c:33: kern_init+79
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07ee0000, [00100000, 07fdffff], type = 1.
+  memory: 00020000, [07fe0000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31798
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "exit".
+I am the parent. Forking the child...
+I am parent, fork a child pid 13
+I am the parent, waiting now..
+I am the child.
+waitpid 13 ok.
+exit pass.
+Iter 1, No.0 philosopher_sema is eating
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 1, No.2 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.3 philosopher_condvar is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is eating
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.2 philosopher_condvar is thinking
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.4 philosopher_condvar is thinking
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_sema is thinking
+Iter 4, No.0 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 1, No.4 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+Iter 2, No.4 philosopher_sema is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.3 philosopher_condvar is thinking
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+No.2 philosopher_sema quit
+Iter 3, No.3 philosopher_sema is eating
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+No.0 philosopher_condvar quit
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+No.0 philosopher_sema quit
+Iter 4, No.1 philosopher_sema is eating
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+No.2 philosopher_condvar quit
+phi_put_forks_condvar: 1 finished eating
+No.1 philosopher_condvar quit
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.3 philosopher_condvar is eating
+No.1 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.3 philosopher_sema is eating
+Iter 3, No.4 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+No.3 philosopher_sema quit
+Iter 3, No.4 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 3 finished eating
+No.3 philosopher_condvar quit
+Iter 4, No.4 philosopher_condvar is eating
+Iter 4, No.4 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+No.4 philosopher_condvar quit
+No.4 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+ebp:0xc03a9fc8 eip:0xc0100b45 args:0xc01c5e5c 0xc01c5e5c 0x00000002 0x00000000
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc03a9fe8 eip:0xc010ab2a args:0x00000000 0x00000000 0x00000000 0x00000010
+    kern/process/proc.c:475: do_exit+68
+kernel panic at kern/process/proc.c:475:
+    initproc exit.
+
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/.faultreadkernel.log lab7/.faultreadkernel.log
--- /home/amadeus/ucore_os_lab/labcodes/lab7/.faultreadkernel.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.faultreadkernel.log	2018-03-23 10:03:04.096299825 +0800
@@ -0,0 +1,153 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc010002a (phys)
+  etext  0xc010d3d1 (phys)
+  edata  0xc01c2bb4 (phys)
+  end    0xc01c5e64 (phys)
+Kernel executable memory footprint: 792KB
+ebp:0xc0131f48 eip:0xc0100b45 args:0x00010094 0x00010094 0xc0131f78 0xc01000c5
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc0131f58 eip:0xc0100e31 args:0x00000000 0x00000000 0x00000000 0xc0131fc8
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0131f78 eip:0xc01000c5 args:0x00000000 0xc0131fa0 0xffff0000 0xc0131fa4
+    kern/init/init.c:59: grade_backtrace2+19
+ebp:0xc0131f98 eip:0xc01000e7 args:0x00000000 0xffff0000 0xc0131fc4 0x0000002a
+    kern/init/init.c:64: grade_backtrace1+27
+ebp:0xc0131fb8 eip:0xc0100104 args:0x00000000 0xc010002a 0xffff0000 0xc010006d
+    kern/init/init.c:69: grade_backtrace0+19
+ebp:0xc0131fd8 eip:0xc0100125 args:0x00000000 0x00000000 0x00000000 0xc010d3e0
+    kern/init/init.c:74: grade_backtrace+26
+ebp:0xc0131ff8 eip:0xc010007a args:0x00000000 0x00000000 0x0000ffff 0x40cf9a00
+    kern/init/init.c:33: kern_init+79
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07ee0000, [00100000, 07fdffff], type = 1.
+  memory: 00020000, [07fe0000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31798
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "faultreadkernel".
+not valid addr fac00000, and  can not find it in vma
+trapframe at 0xc03b0fb4
+  edi  0x00000000
+  esi  0x00000000
+  ebp  0xafffffa8
+  oesp 0xc03b0fd4
+  ebx  0x00000000
+  edx  0x00000000
+  ecx  0xafffffc0
+  eax  0xfac00000
+  ds   0x----0023
+  es   0x----0023
+  fs   0x----0000
+  gs   0x----0000
+  trap 0x0000000e Page Fault
+  err  0x00000005
+  eip  0x00800f69
+  cs   0x----001b
+  flag 0x00000286 PF,SF,IF,IOPL=0
+  esp  0xafffffa0
+  ss   0x----0023
+killed by kernel.
+ebp:0xc03b0f58 eip:0xc0100b45 args:0x00000000 0x00000000 0x00000000 0xfffffffd
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc03b0f78 eip:0xc0102949 args:0xc03b0fb4 0x00000000 0x00000023 0x00000023
+    kern/trap/trap.c:218: trap_dispatch+258
+ebp:0xc03b0fa8 eip:0xc0102a90 args:0xc03b0fb4 0x00000000 0x00000000 0xafffffa8
+    kern/trap/trap.c:312: trap+80
+ebp:0xafffffa8 eip:0xc010355a args:0x00000000 0x00000000 0x00000000 0x00800380
+    kern/trap/trapentry.S:24: <unknown>+0
+ebp:0xafffffd8 eip:0x00800380 args:0x00000000 0x00000000 0x00000000 0x00000000
+    user/libs/umain.c:7: umain+10
+kernel panic at kern/trap/trap.c:218:
+    handle user mode pgfault failed. ret=-3
+
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/.faultread.log lab7/.faultread.log
--- /home/amadeus/ucore_os_lab/labcodes/lab7/.faultread.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.faultread.log	2018-03-23 10:03:02.340317447 +0800
@@ -0,0 +1,153 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc010002a (phys)
+  etext  0xc010d3d1 (phys)
+  edata  0xc01c2bb4 (phys)
+  end    0xc01c5e64 (phys)
+Kernel executable memory footprint: 792KB
+ebp:0xc0131f48 eip:0xc0100b45 args:0x00010094 0x00010094 0xc0131f78 0xc01000c5
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc0131f58 eip:0xc0100e31 args:0x00000000 0x00000000 0x00000000 0xc0131fc8
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0131f78 eip:0xc01000c5 args:0x00000000 0xc0131fa0 0xffff0000 0xc0131fa4
+    kern/init/init.c:59: grade_backtrace2+19
+ebp:0xc0131f98 eip:0xc01000e7 args:0x00000000 0xffff0000 0xc0131fc4 0x0000002a
+    kern/init/init.c:64: grade_backtrace1+27
+ebp:0xc0131fb8 eip:0xc0100104 args:0x00000000 0xc010002a 0xffff0000 0xc010006d
+    kern/init/init.c:69: grade_backtrace0+19
+ebp:0xc0131fd8 eip:0xc0100125 args:0x00000000 0x00000000 0x00000000 0xc010d3e0
+    kern/init/init.c:74: grade_backtrace+26
+ebp:0xc0131ff8 eip:0xc010007a args:0x00000000 0x00000000 0x0000ffff 0x40cf9a00
+    kern/init/init.c:33: kern_init+79
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07ee0000, [00100000, 07fdffff], type = 1.
+  memory: 00020000, [07fe0000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31798
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "faultread".
+not valid addr 0, and  can not find it in vma
+trapframe at 0xc03b0fb4
+  edi  0x00000000
+  esi  0x00000000
+  ebp  0xafffffa8
+  oesp 0xc03b0fd4
+  ebx  0x00000000
+  edx  0x00000000
+  ecx  0xafffffc0
+  eax  0x00000000
+  ds   0x----0023
+  es   0x----0023
+  fs   0x----0000
+  gs   0x----0000
+  trap 0x0000000e Page Fault
+  err  0x00000004
+  eip  0x00800f69
+  cs   0x----001b
+  flag 0x00000286 PF,SF,IF,IOPL=0
+  esp  0xafffffa0
+  ss   0x----0023
+killed by kernel.
+ebp:0xc03b0f58 eip:0xc0100b45 args:0x00000000 0x00000000 0x00000000 0xfffffffd
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc03b0f78 eip:0xc0102949 args:0xc03b0fb4 0x00000000 0x00000023 0x00000023
+    kern/trap/trap.c:218: trap_dispatch+258
+ebp:0xc03b0fa8 eip:0xc0102a90 args:0xc03b0fb4 0x00000000 0x00000000 0xafffffa8
+    kern/trap/trap.c:312: trap+80
+ebp:0xafffffa8 eip:0xc010355a args:0x00000000 0x00000000 0x00000000 0x00800380
+    kern/trap/trapentry.S:24: <unknown>+0
+ebp:0xafffffd8 eip:0x00800380 args:0x00000000 0x00000000 0x00000000 0x00000000
+    user/libs/umain.c:7: umain+10
+kernel panic at kern/trap/trap.c:218:
+    handle user mode pgfault failed. ret=-3
+
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/.forktest.log lab7/.forktest.log
--- /home/amadeus/ucore_os_lab/labcodes/lab7/.forktest.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.forktest.log	2018-03-23 10:03:32.644011912 +0800
@@ -0,0 +1,365 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc010002a (phys)
+  etext  0xc010d3d1 (phys)
+  edata  0xc01c2bb4 (phys)
+  end    0xc01c5e64 (phys)
+Kernel executable memory footprint: 792KB
+ebp:0xc0131f48 eip:0xc0100b45 args:0x00010094 0x00010094 0xc0131f78 0xc01000c5
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc0131f58 eip:0xc0100e31 args:0x00000000 0x00000000 0x00000000 0xc0131fc8
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0131f78 eip:0xc01000c5 args:0x00000000 0xc0131fa0 0xffff0000 0xc0131fa4
+    kern/init/init.c:59: grade_backtrace2+19
+ebp:0xc0131f98 eip:0xc01000e7 args:0x00000000 0xffff0000 0xc0131fc4 0x0000002a
+    kern/init/init.c:64: grade_backtrace1+27
+ebp:0xc0131fb8 eip:0xc0100104 args:0x00000000 0xc010002a 0xffff0000 0xc010006d
+    kern/init/init.c:69: grade_backtrace0+19
+ebp:0xc0131fd8 eip:0xc0100125 args:0x00000000 0x00000000 0x00000000 0xc010d3e0
+    kern/init/init.c:74: grade_backtrace+26
+ebp:0xc0131ff8 eip:0xc010007a args:0x00000000 0x00000000 0x0000ffff 0x40cf9a00
+    kern/init/init.c:33: kern_init+79
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07ee0000, [00100000, 07fdffff], type = 1.
+  memory: 00020000, [07fe0000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31798
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "forktest".
+I am child 31
+I am child 30
+I am child 29
+I am child 28
+I am child 27
+I am child 26
+I am child 25
+I am child 24
+I am child 23
+I am child 22
+I am child 21
+I am child 20
+I am child 19
+I am child 18
+I am child 17
+I am child 16
+I am child 15
+I am child 14
+I am child 13
+I am child 12
+I am child 11
+I am child 10
+I am child 9
+I am child 8
+I am child 7
+I am child 6
+I am child 5
+I am child 4
+I am child 3
+I am child 2
+I am child 1
+I am child 0
+forktest pass.
+Iter 1, No.0 philosopher_sema is eating
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 1, No.2 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.3 philosopher_condvar is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is eating
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.2 philosopher_condvar is thinking
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.4 philosopher_condvar is thinking
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_sema is thinking
+Iter 4, No.0 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 1, No.4 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+Iter 2, No.4 philosopher_sema is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.3 philosopher_condvar is thinking
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+No.2 philosopher_sema quit
+Iter 3, No.3 philosopher_sema is eating
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+No.0 philosopher_condvar quit
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+No.0 philosopher_sema quit
+Iter 4, No.1 philosopher_sema is eating
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+No.2 philosopher_condvar quit
+phi_put_forks_condvar: 1 finished eating
+No.1 philosopher_condvar quit
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.3 philosopher_condvar is eating
+No.1 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.3 philosopher_sema is eating
+Iter 3, No.4 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+No.3 philosopher_sema quit
+Iter 3, No.4 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 3 finished eating
+No.3 philosopher_condvar quit
+Iter 4, No.4 philosopher_condvar is eating
+Iter 4, No.4 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+No.4 philosopher_condvar quit
+No.4 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+ebp:0xc03a9fc8 eip:0xc0100b45 args:0xc01c5e5c 0xc01c5e5c 0x00000002 0x00000000
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc03a9fe8 eip:0xc010ab2a args:0x00000000 0x00000000 0x00000000 0x00000010
+    kern/process/proc.c:475: do_exit+68
+kernel panic at kern/process/proc.c:475:
+    initproc exit.
+
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/.forktree.log lab7/.forktree.log
--- /home/amadeus/ucore_os_lab/labcodes/lab7/.forktree.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.forktree.log	2018-03-23 10:03:35.855979359 +0800
@@ -0,0 +1,363 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc010002a (phys)
+  etext  0xc010d3d1 (phys)
+  edata  0xc01c2bb4 (phys)
+  end    0xc01c5e64 (phys)
+Kernel executable memory footprint: 792KB
+ebp:0xc0131f48 eip:0xc0100b45 args:0x00010094 0x00010094 0xc0131f78 0xc01000c5
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc0131f58 eip:0xc0100e31 args:0x00000000 0x00000000 0x00000000 0xc0131fc8
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0131f78 eip:0xc01000c5 args:0x00000000 0xc0131fa0 0xffff0000 0xc0131fa4
+    kern/init/init.c:59: grade_backtrace2+19
+ebp:0xc0131f98 eip:0xc01000e7 args:0x00000000 0xffff0000 0xc0131fc4 0x0000002a
+    kern/init/init.c:64: grade_backtrace1+27
+ebp:0xc0131fb8 eip:0xc0100104 args:0x00000000 0xc010002a 0xffff0000 0xc010006d
+    kern/init/init.c:69: grade_backtrace0+19
+ebp:0xc0131fd8 eip:0xc0100125 args:0x00000000 0x00000000 0x00000000 0xc010d3e0
+    kern/init/init.c:74: grade_backtrace+26
+ebp:0xc0131ff8 eip:0xc010007a args:0x00000000 0x00000000 0x0000ffff 0x40cf9a00
+    kern/init/init.c:33: kern_init+79
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07ee0000, [00100000, 07fdffff], type = 1.
+  memory: 00020000, [07fe0000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31798
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "forktree".
+0002: I am ''
+000e: I am '1'
+0010: I am '11'
+0012: I am '111'
+0014: I am '1111'
+0013: I am '1110'
+0011: I am '110'
+0016: I am '1101'
+0015: I am '1100'
+000f: I am '10'
+0018: I am '101'
+001a: I am '1011'
+0019: I am '1010'
+0017: I am '100'
+001c: I am '1001'
+001b: I am '1000'
+000d: I am '0'
+001e: I am '01'
+0020: I am '011'
+0022: I am '0111'
+0021: I am '0110'
+001f: I am '010'
+0024: I am '0101'
+0023: I am '0100'
+001d: I am '00'
+0026: I am '001'
+0028: I am '0011'
+0027: I am '0010'
+0025: I am '000'
+002a: I am '0001'
+0029: I am '0000'
+Iter 1, No.0 philosopher_sema is eating
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 1, No.2 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.3 philosopher_condvar is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is eating
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.2 philosopher_condvar is thinking
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.4 philosopher_condvar is thinking
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_sema is thinking
+Iter 4, No.0 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 1, No.4 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+Iter 2, No.4 philosopher_sema is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.3 philosopher_condvar is thinking
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+No.2 philosopher_sema quit
+Iter 3, No.3 philosopher_sema is eating
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+No.0 philosopher_condvar quit
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+No.0 philosopher_sema quit
+Iter 4, No.1 philosopher_sema is eating
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+No.2 philosopher_condvar quit
+phi_put_forks_condvar: 1 finished eating
+No.1 philosopher_condvar quit
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.3 philosopher_condvar is eating
+No.1 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.3 philosopher_sema is eating
+Iter 3, No.4 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+No.3 philosopher_sema quit
+Iter 3, No.4 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 3 finished eating
+No.3 philosopher_condvar quit
+Iter 4, No.4 philosopher_condvar is eating
+Iter 4, No.4 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+No.4 philosopher_condvar quit
+No.4 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+ebp:0xc03a9fc8 eip:0xc0100b45 args:0xc01c5e5c 0xc01c5e5c 0x00000002 0x00000000
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc03a9fe8 eip:0xc010ab2a args:0x00000000 0x00000000 0x00000000 0x00000010
+    kern/process/proc.c:475: do_exit+68
+kernel panic at kern/process/proc.c:475:
+    initproc exit.
+
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/.gitignore lab7/.gitignore
--- /home/amadeus/ucore_os_lab/labcodes/lab7/.gitignore	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.gitignore	2018-03-22 10:40:40.540819975 +0800
@@ -0,0 +1,9 @@
+bin
+bin/*
+./bin/*
+obj
+obj/*
+./obj/*
+tags
+.*.log
+
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/.hello.log lab7/.hello.log
--- /home/amadeus/ucore_os_lab/labcodes/lab7/.hello.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.hello.log	2018-03-23 10:03:07.228268367 +0800
@@ -0,0 +1,335 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc010002a (phys)
+  etext  0xc010d3d1 (phys)
+  edata  0xc01c2bb4 (phys)
+  end    0xc01c5e64 (phys)
+Kernel executable memory footprint: 792KB
+ebp:0xc0131f48 eip:0xc0100b45 args:0x00010094 0x00010094 0xc0131f78 0xc01000c5
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc0131f58 eip:0xc0100e31 args:0x00000000 0x00000000 0x00000000 0xc0131fc8
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0131f78 eip:0xc01000c5 args:0x00000000 0xc0131fa0 0xffff0000 0xc0131fa4
+    kern/init/init.c:59: grade_backtrace2+19
+ebp:0xc0131f98 eip:0xc01000e7 args:0x00000000 0xffff0000 0xc0131fc4 0x0000002a
+    kern/init/init.c:64: grade_backtrace1+27
+ebp:0xc0131fb8 eip:0xc0100104 args:0x00000000 0xc010002a 0xffff0000 0xc010006d
+    kern/init/init.c:69: grade_backtrace0+19
+ebp:0xc0131fd8 eip:0xc0100125 args:0x00000000 0x00000000 0x00000000 0xc010d3e0
+    kern/init/init.c:74: grade_backtrace+26
+ebp:0xc0131ff8 eip:0xc010007a args:0x00000000 0x00000000 0x0000ffff 0x40cf9a00
+    kern/init/init.c:33: kern_init+79
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07ee0000, [00100000, 07fdffff], type = 1.
+  memory: 00020000, [07fe0000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31798
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "hello".
+Hello world!!.
+I am process 2.
+hello pass.
+Iter 1, No.0 philosopher_sema is eating
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 1, No.2 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.3 philosopher_condvar is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is eating
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.2 philosopher_condvar is thinking
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.4 philosopher_condvar is thinking
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_sema is thinking
+Iter 4, No.0 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 1, No.4 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+Iter 2, No.4 philosopher_sema is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.3 philosopher_condvar is thinking
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+No.2 philosopher_sema quit
+Iter 3, No.3 philosopher_sema is eating
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+No.0 philosopher_condvar quit
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+No.0 philosopher_sema quit
+Iter 4, No.1 philosopher_sema is eating
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+No.2 philosopher_condvar quit
+phi_put_forks_condvar: 1 finished eating
+No.1 philosopher_condvar quit
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.3 philosopher_condvar is eating
+No.1 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.3 philosopher_sema is eating
+Iter 3, No.4 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+No.3 philosopher_sema quit
+Iter 3, No.4 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 3 finished eating
+No.3 philosopher_condvar quit
+Iter 4, No.4 philosopher_condvar is eating
+Iter 4, No.4 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+No.4 philosopher_condvar quit
+No.4 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+ebp:0xc03a9fc8 eip:0xc0100b45 args:0xc01c5e5c 0xc01c5e5c 0x00000002 0x00000000
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc03a9fe8 eip:0xc010ab2a args:0x00000000 0x00000000 0x00000000 0x00000010
+    kern/process/proc.c:475: do_exit+68
+kernel panic at kern/process/proc.c:475:
+    initproc exit.
+
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/kern/debug/assert.h lab7/kern/debug/assert.h
--- /home/amadeus/ucore_os_lab/labcodes/lab7/kern/debug/assert.h	2018-03-15 16:55:42.076056446 +0800
+++ lab7/kern/debug/assert.h	2018-03-22 10:40:40.548820845 +0800
@@ -10,6 +10,7 @@
     __warn(__FILE__, __LINE__, __VA_ARGS__)
 
 #define panic(...)                                      \
+    print_stackframe(); 				\
     __panic(__FILE__, __LINE__, __VA_ARGS__)
 
 #define assert(x)                                       \
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/kern/debug/kdebug.c lab7/kern/debug/kdebug.c
--- /home/amadeus/ucore_os_lab/labcodes/lab7/kern/debug/kdebug.c	2018-03-15 16:55:42.076056446 +0800
+++ lab7/kern/debug/kdebug.c	2018-03-22 10:40:40.548820845 +0800
@@ -335,7 +335,7 @@
  * */
 void
 print_stackframe(void) {
-     /* LAB1 YOUR CODE : STEP 1 */
+     /* LAB1 2015011358 : STEP 1 */
      /* (1) call read_ebp() to get the value of ebp. the type is (uint32_t);
       * (2) call read_eip() to get the value of eip. the type is (uint32_t);
       * (3) from 0 .. STACKFRAME_DEPTH
@@ -347,5 +347,15 @@
       *           NOTICE: the calling funciton's return addr eip  = ss:[ebp+4]
       *                   the calling funciton's ebp = ss:[ebp]
       */
+	uint32_t ebp = read_ebp();
+	uint32_t ra = read_eip(); 
+	for (int i = 0; i < STACKFRAME_DEPTH && ebp != 0; ++ i) {
+		cprintf("ebp:0x%08x eip:0x%08x ", ebp, ra);
+		uint32_t* ptr = (uint32_t *) (ebp + 8);
+		cprintf("args:0x%08x 0x%08x 0x%08x 0x%08x\n", ptr[0], ptr[1], ptr[2], ptr[3]);
+		print_debuginfo(ra - 1);
+		ra = *((uint32_t *) (ebp + 4));
+		ebp = *((uint32_t *) ebp);
+	}
 }
 
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/kern/mm/default_pmm.c lab7/kern/mm/default_pmm.c
--- /home/amadeus/ucore_os_lab/labcodes/lab7/kern/mm/default_pmm.c	2018-03-15 16:55:42.080056396 +0800
+++ lab7/kern/mm/default_pmm.c	2018-03-22 10:40:40.548820845 +0800
@@ -9,7 +9,7 @@
    usually split, and the remainder added to the list as another free block.
    Please see Page 196~198, Section 8.2 of Yan Wei Min's chinese book "Data Structure -- C programming language"
 */
-// LAB2 EXERCISE 1: YOUR CODE
+// LAB2 EXERCISE 1: 2015011358
 // you should rewrite functions: default_init,default_init_memmap,default_alloc_pages, default_free_pages.
 /*
  * Details of FFMA
@@ -73,6 +73,7 @@
         assert(PageReserved(p));
         p->flags = p->property = 0;
         set_page_ref(p, 0);
+	SetPageProperty(p);
     }
     base->property = n;
     SetPageProperty(base);
@@ -82,6 +83,7 @@
 
 static struct Page *
 default_alloc_pages(size_t n) {
+	//cprintf("alloc\n");
     assert(n > 0);
     if (n > nr_free) {
         return NULL;
@@ -96,6 +98,20 @@
         }
     }
     if (page != NULL) {
+	    for (struct Page *p = page; p != (page + n); ++p) {
+		    ClearPageProperty(p);
+	    }
+	    if (page->property > n) {
+		    struct Page *p = page + n;
+		    p->property = page->property - n;
+		    list_add(&(page->page_link), &(p->page_link));
+	    }
+	    list_del(&(page->page_link));
+	    nr_free -= n;
+	    //ClearPageProperty(page);
+    }
+    /*
+    if (page != NULL) {
         list_del(&(page->page_link));
         if (page->property > n) {
             struct Page *p = page + n;
@@ -105,38 +121,52 @@
         nr_free -= n;
         ClearPageProperty(page);
     }
+    */
+	//cprintf("\\alloc\n");
     return page;
 }
 
+static bool
+merge_backward(struct Page *base) {
+	list_entry_t *le = list_next(&(base->page_link));
+	//cprintf("base: %08x le: %08x free_list: %08x\n", &(base->page_link), le, &free_list);
+	if (le == &free_list) return 0;
+	struct Page *p = le2page(le, page_link);
+	if (PageProperty(p) == 0) return 0;
+	if (base + base->property != p) return 0;
+	base->property += p->property;
+	p->property = 0;
+	list_del(le);
+	//cprintf("************ merged! ************\n");
+	return 1;
+}
+
 static void
 default_free_pages(struct Page *base, size_t n) {
+	//cprintf("free\n");
     assert(n > 0);
     struct Page *p = base;
-    for (; p != base + n; p ++) {
+    for (; p != (base + n); p ++) {
         assert(!PageReserved(p) && !PageProperty(p));
-        p->flags = 0;
+	SetPageProperty(p);
         set_page_ref(p, 0);
     }
     base->property = n;
-    SetPageProperty(base);
+    //SetPageProperty(base);
     list_entry_t *le = list_next(&free_list);
-    while (le != &free_list) {
-        p = le2page(le, page_link);
-        le = list_next(le);
-        if (base + base->property == p) {
-            base->property += p->property;
-            ClearPageProperty(p);
-            list_del(&(p->page_link));
-        }
-        else if (p + p->property == base) {
-            p->property += base->property;
-            ClearPageProperty(base);
-            base = p;
-            list_del(&(p->page_link));
-        }
-    }
+    //cprintf("to find position\n");
+    for (; le != (&free_list) && le < (&(base->page_link)); le = list_next(le));
+    //cprintf("found position\n");
+    list_add_before(le, &(base->page_link));
     nr_free += n;
-    list_add(&free_list, &(base->page_link));
+    //cprintf("to merge backward\n");
+    while (merge_backward(base));
+    //cprintf("merged backward\n");
+    for (list_entry_t *i = list_prev(&(base->page_link)); i!= &free_list; i = list_prev(i)) {
+	    if (!merge_backward(le2page(i, page_link))) break;
+    }
+	//cprintf("\\free\n");
+	
 }
 
 static size_t
@@ -207,6 +237,7 @@
         count ++, total += p->property;
     }
     assert(total == nr_free_pages());
+    //cprintf("count = %08x\n", count);
 
     basic_check();
 
@@ -232,6 +263,7 @@
     p2 = p0 + 1;
     free_page(p0);
     free_pages(p1, 3);
+    //cprintf("%08x %08x\n", PageProperty(p0), p0->property);
     assert(PageProperty(p0) && p0->property == 1);
     assert(PageProperty(p1) && p1->property == 3);
 
@@ -255,7 +287,9 @@
     while ((le = list_next(le)) != &free_list) {
         struct Page *p = le2page(le, page_link);
         count --, total -= p->property;
+	//cprintf("Page: %08x %08x %08x size: %08x\n", p, p + p->property, PageProperty(p), p->property);
     }
+    //cprintf("count = %08x\n", count);
     assert(count == 0);
     assert(total == 0);
 }
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/kern/mm/pmm.c lab7/kern/mm/pmm.c
--- /home/amadeus/ucore_os_lab/labcodes/lab7/kern/mm/pmm.c	2018-03-15 16:55:42.080056396 +0800
+++ lab7/kern/mm/pmm.c	2018-03-22 10:40:40.548820845 +0800
@@ -310,6 +310,7 @@
     page_init();
 
     //use pmm->check to verify the correctness of the alloc/free function in a pmm
+    //cprintf("to check alloc page\n");
     check_alloc_page();
 
     // create boot_pgdir, an initial page directory(Page Directory Table, PDT)
@@ -363,7 +364,7 @@
 // return vaule: the kernel virtual address of this pte
 pte_t *
 get_pte(pde_t *pgdir, uintptr_t la, bool create) {
-    /* LAB2 EXERCISE 2: YOUR CODE
+    /* LAB2 EXERCISE 2: 2015011358
      *
      * If you need to visit a physical address, please use KADDR()
      * please read pmm.h for useful macros
@@ -395,7 +396,26 @@
                           // (7) set page directory entry's permission
     }
     return NULL;          // (8) return page table entry
-#endif
+#endif 
+    /*
+    pte_t *pt_addr;
+    if (pgdir[(PDX(la))] & PTE_P) {
+	            pt_addr = (pte_t *)(KADDR(pgdir[(PDX(la))] & 0XFFFFF000)); 
+		            return &pt_addr[(PTX(la))]; 
+			        }*/
+    pde_t *pdep = pgdir + PDX(la); // get the page-dir entry
+    //cprintf("%08x\n", *pdep & PTE_P);
+    pte_t *ptep = ((pte_t *) (KADDR(*pdep & ~0XFFF)) + PTX(la));
+    //cprintf("%08x\n", *ptep & PTE_P);
+    if (*pdep & PTE_P) return ptep; // check if the entry is presented
+    if (!create) return NULL; // check if create a new page-table
+    struct Page* pt = alloc_page(); // allocate a page frame for the page-table
+    if (pt == NULL) return NULL;
+    set_page_ref(pt, 1);
+    ptep = KADDR(page2pa(pt)); // get the virtual address of page pt
+    memset(ptep, 0, PGSIZE);
+    *pdep = (page2pa(pt) & ~0XFFF) | PTE_U | PTE_W | PTE_P;
+    return ptep + PTX(la);
 }
 
 //get_page - get related Page struct for linear address la using PDT pgdir
@@ -416,7 +436,7 @@
 //note: PT is changed, so the TLB need to be invalidate 
 static inline void
 page_remove_pte(pde_t *pgdir, uintptr_t la, pte_t *ptep) {
-    /* LAB2 EXERCISE 3: YOUR CODE
+    /* LAB2 EXERCISE 3: 2015011358
      *
      * Please check if ptep is valid, and tlb must be manually updated if mapping is updated
      *
@@ -441,6 +461,12 @@
                                   //(6) flush tlb
     }
 #endif
+    assert(*ptep & PTE_P); // check if pte is valid
+    struct Page *page = pte2page(*ptep);
+    page->ref --;
+    if (!page->ref) free_page(page);
+    *ptep &= (~PTE_P);
+    tlb_invalidate(pgdir, la);
 }
 
 void
@@ -508,7 +534,7 @@
         assert(page!=NULL);
         assert(npage!=NULL);
         int ret=0;
-        /* LAB5:EXERCISE2 YOUR CODE
+        /* LAB5:EXERCISE2 2015011358
          * replicate content of page to npage, build the map of phy addr of nage with the linear addr start
          *
          * Some Useful MACROs and DEFINEs, you can use them in below implementation.
@@ -522,6 +548,11 @@
          * (3) memory copy from src_kvaddr to dst_kvaddr, size is PGSIZE
          * (4) build the map of phy addr of  nage with the linear addr start
          */
+	char *src_kvaddr = page2kva(page);
+	char *dst_kvaddr = page2kva(npage);
+	memcpy(dst_kvaddr, src_kvaddr, PGSIZE);
+	page_insert(to, npage, start, perm);
+
         assert(ret == 0);
         }
         start += PGSIZE;
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/kern/mm/swap_fifo.c lab7/kern/mm/swap_fifo.c
--- /home/amadeus/ucore_os_lab/labcodes/lab7/kern/mm/swap_fifo.c	2018-03-15 16:55:42.080056396 +0800
+++ lab7/kern/mm/swap_fifo.c	2018-03-22 10:40:40.548820845 +0800
@@ -49,8 +49,9 @@
  
     assert(entry != NULL && head != NULL);
     //record the page access situlation
-    /*LAB3 EXERCISE 2: YOUR CODE*/ 
+    /*LAB3 EXERCISE 2: 2015011358*/ 
     //(1)link the most recent arrival page at the back of the pra_list_head qeueue.
+    list_add_before(head, entry);
     return 0;
 }
 /*
@@ -64,9 +65,14 @@
          assert(head != NULL);
      assert(in_tick==0);
      /* Select the victim */
-     /*LAB3 EXERCISE 2: YOUR CODE*/ 
+     /*LAB3 EXERCISE 2: 2015011358*/ 
      //(1)  unlink the  earliest arrival page in front of pra_list_head qeueue
      //(2)  set the addr of addr of this page to ptr_page
+     list_entry_t *le = list_next(head);
+     assert(le != head); // assert that the queue is not empty
+     struct Page *page = le2page(le, pra_page_link);
+     list_del(le);
+     *ptr_page = page;
      return 0;
 }
 
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/kern/mm/vmm.c lab7/kern/mm/vmm.c
--- /home/amadeus/ucore_os_lab/labcodes/lab7/kern/mm/vmm.c	2018-03-15 16:55:42.080056396 +0800
+++ lab7/kern/mm/vmm.c	2018-03-22 10:40:40.552821281 +0800
@@ -434,13 +434,13 @@
     ret = -E_NO_MEM;
 
     pte_t *ptep=NULL;
-    /*LAB3 EXERCISE 1: YOUR CODE
+    /*LAB3 EXERCISE 1: 2015011358
     * Maybe you want help comment, BELOW comments can help you finish the code
     *
     * Some Useful MACROs and DEFINEs, you can use them in below implementation.
     * MACROs or Functions:
     *   get_pte : get an pte and return the kernel virtual address of this pte for la
-    *             if the PT contians this pte didn't exist, alloc a page for PT (notice the 3th parameter '1')
+    *             if the PT contains this pte didn't exist, alloc a page for PT (notice the 3th parameter '1')
     *   pgdir_alloc_page : call alloc_page & page_insert functions to allocate a page size memory & setup
     *             an addr map pa<--->la with linear address la and the PDT pgdir
     * DEFINES:
@@ -452,14 +452,14 @@
     *
     */
 #if 0
-    /*LAB3 EXERCISE 1: YOUR CODE*/
+    /*LAB3 EXERCISE 1: 2015011358*/
     ptep = ???              //(1) try to find a pte, if pte's PT(Page Table) isn't existed, then create a PT.
     if (*ptep == 0) {
                             //(2) if the phy addr isn't exist, then alloc a page & map the phy addr with logical addr
 
     }
     else {
-    /*LAB3 EXERCISE 2: YOUR CODE
+    /*LAB3 EXERCISE 2: 2015011358
     * Now we think this pte is a  swap entry, we should load data from disk to a page with phy addr,
     * and map the phy addr with logical addr, trigger swap manager to record the access situation of this page.
     *
@@ -493,6 +493,22 @@
         }
    }
 #endif
+    ptep = get_pte(mm->pgdir, addr, 1);
+    if (*ptep == 0) {
+	    struct Page* page = pgdir_alloc_page(mm->pgdir, addr, perm);
+    } else {
+	    if (swap_init_ok) {
+		    struct Page *page = NULL;
+		    swap_in(mm, addr, &page);
+		    page_insert(mm->pgdir, page, addr, perm);
+		    swap_map_swappable(mm, addr, page, 1);
+		    page->pra_vaddr = addr; // it seems not reasonble that this statement doesn't exist in page_insert() function
+	    } else {
+            	cprintf("no swap_init_ok but ptep is %x, failed\n",*ptep);
+            	goto failed;
+	    }
+    }
+
    ret = 0;
 failed:
     return ret;
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/kern/process/proc.c lab7/kern/process/proc.c
--- /home/amadeus/ucore_os_lab/labcodes/lab7/kern/process/proc.c	2018-03-15 16:55:42.084056346 +0800
+++ lab7/kern/process/proc.c	2018-03-23 10:04:06.827718189 +0800
@@ -87,7 +87,7 @@
 alloc_proc(void) {
     struct proc_struct *proc = kmalloc(sizeof(struct proc_struct));
     if (proc != NULL) {
-    //LAB4:EXERCISE1 YOUR CODE
+    //LAB4:EXERCISE1 2015011358
     /*
      * below fields in proc_struct need to be initialized
      *       enum proc_state state;                      // Process state
@@ -103,13 +103,13 @@
      *       uint32_t flags;                             // Process flag
      *       char name[PROC_NAME_LEN + 1];               // Process name
      */
-     //LAB5 YOUR CODE : (update LAB4 steps)
+     //LAB5 2015011358 : (update LAB4 steps)
     /*
      * below fields(add in LAB5) in proc_struct need to be initialized	
      *       uint32_t wait_state;                        // waiting state
      *       struct proc_struct *cptr, *yptr, *optr;     // relations between processes
 	 */
-     //LAB6 YOUR CODE : (update LAB5 steps)
+     //LAB6 2015011358 : (update LAB5 steps)
     /*
      * below fields(add in LAB6) in proc_struct need to be initialized
      *     struct run_queue *rq;                       // running queue contains Process
@@ -119,6 +119,27 @@
      *     uint32_t lab6_stride;                       // FOR LAB6 ONLY: the current stride of the process
      *     uint32_t lab6_priority;                     // FOR LAB6 ONLY: the priority of process, set by lab6_set_priority(uint32_t)
      */
+	    proc->state = PROC_UNINIT;
+	    proc->pid = -1;
+	    proc->runs = 0;
+	    proc->kstack = 0;
+	    proc->need_resched = 0;
+	    proc->parent = NULL;
+	    proc->mm = NULL;
+	    memset(&proc->context, 0, sizeof(struct context));
+	    proc->tf = NULL;
+	    proc->cr3 = boot_cr3;
+	    proc->flags = 0;
+	    memset(proc->name, 0, PROC_NAME_LEN);
+	    proc->wait_state = 0;
+	    proc->cptr = proc->yptr = proc->optr = NULL;
+	    //lab 6
+	    proc->rq = NULL;
+	    memset(&proc->run_link, 0, sizeof(list_entry_t));
+	    proc->time_slice = 0;
+	    memset(&proc->lab6_run_pool, 0, sizeof(skew_heap_entry_t));
+	    proc->lab6_stride = 0;
+	    proc->lab6_priority = 1;
     }
     return proc;
 }
@@ -380,7 +401,7 @@
         goto fork_out;
     }
     ret = -E_NO_MEM;
-    //LAB4:EXERCISE2 YOUR CODE
+    //LAB4:EXERCISE2 2015011358
     /*
      * Some Useful MACROs, Functions and DEFINEs, you can use them in below implementation.
      * MACROs or Functions:
@@ -406,13 +427,30 @@
     //    6. call wakeup_proc to make the new child process RUNNABLE
     //    7. set ret vaule using child proc's pid
 
-	//LAB5 YOUR CODE : (update LAB4 steps)
+	//LAB5 2015011358 : (update LAB4 steps)
    /* Some Functions
     *    set_links:  set the relation links of process.  ALSO SEE: remove_links:  lean the relation links of process 
     *    -------------------
 	*    update step 1: set child proc's parent to current process, make sure current process's wait_state is 0
 	*    update step 5: insert proc_struct into hash_list && proc_list, set the relation links of process
     */
+
+    proc = alloc_proc(); // allocate memory for TCB
+    proc->parent = current;
+    assert(current->wait_state == 0);
+    if (proc == NULL) goto fork_out;
+    assert(setup_kstack(proc) == 0); 
+    assert(copy_mm(clone_flags, proc) == 0); 
+    copy_thread(proc, stack, tf);
+    proc->pid = get_pid();
+    hash_proc(proc);
+    //nr_process ++;
+    set_links(proc);
+    //list_add(&proc_list, &proc->list_link);
+    list_init(&proc->run_link);
+    wakeup_proc(proc);
+    ret = proc->pid;
+    //cprintf("number of process = %08x\n", nr_process);
 	
 fork_out:
     return ret;
@@ -603,7 +641,7 @@
     //(6) setup trapframe for user environment
     struct trapframe *tf = current->tf;
     memset(tf, 0, sizeof(struct trapframe));
-    /* LAB5:EXERCISE1 YOUR CODE
+    /* LAB5:EXERCISE1 2015011358
      * should set tf_cs,tf_ds,tf_es,tf_ss,tf_esp,tf_eip,tf_eflags
      * NOTICE: If we set trapframe correctly, then the user level process can return to USER MODE from kernel. So
      *          tf_cs should be USER_CS segment (see memlayout.h)
@@ -612,6 +650,11 @@
      *          tf_eip should be the entry point of this binary program (elf->e_entry)
      *          tf_eflags should be set to enable computer to produce Interrupt
      */
+    tf->tf_cs = USER_CS;
+    tf->tf_ds = tf->tf_es = tf->tf_ss = USER_DS;
+    tf->tf_esp = USTACKTOP;
+    tf->tf_eip = elf->e_entry;
+    tf->tf_eflags = 0x00000002 | FL_IF; // to enable interrupt
     ret = 0;
 out:
     return ret;
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/kern/schedule/default_sched.c lab7/kern/schedule/default_sched.c
--- /home/amadeus/ucore_os_lab/labcodes/lab7/kern/schedule/default_sched.c	2018-03-15 16:55:42.084056346 +0800
+++ lab7/kern/schedule/default_sched.c	2018-03-22 10:40:40.552821281 +0800
@@ -47,6 +47,7 @@
     }
 }
 
+/*
 struct sched_class default_sched_class = {
     .name = "RR_scheduler",
     .init = RR_init,
@@ -55,4 +56,4 @@
     .pick_next = RR_pick_next,
     .proc_tick = RR_proc_tick,
 };
-
+*/
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/kern/schedule/default_sched_stride.c lab7/kern/schedule/default_sched_stride.c
--- /home/amadeus/ucore_os_lab/labcodes/lab7/kern/schedule/default_sched_stride.c	1970-01-01 08:00:00.000000000 +0800
+++ lab7/kern/schedule/default_sched_stride.c	2018-03-22 10:40:40.552821281 +0800
@@ -0,0 +1,155 @@
+#include <defs.h>
+#include <list.h>
+#include <proc.h>
+#include <assert.h>
+#include <default_sched.h>
+
+#define USE_SKEW_HEAP 1
+
+/* You should define the BigStride constant here*/
+/* LAB6: 2015011358 */
+#define BIG_STRIDE ((uint32_t) 2015011358)    /* you should give a value, and is ??? */
+
+/* The compare function for two skew_heap_node_t's and the
+ * corresponding procs*/
+static int
+proc_stride_comp_f(void *a, void *b)
+{
+     struct proc_struct *p = le2proc(a, lab6_run_pool);
+     struct proc_struct *q = le2proc(b, lab6_run_pool);
+     int32_t c = p->lab6_stride - q->lab6_stride;
+     if (c > 0) return 1;
+     else if (c == 0) return 0;
+     else return -1;
+}
+
+/*
+ * stride_init initializes the run-queue rq with correct assignment for
+ * member variables, including:
+ *
+ *   - run_list: should be a empty list after initialization.
+ *   - lab6_run_pool: NULL
+ *   - proc_num: 0
+ *   - max_time_slice: no need here, the variable would be assigned by the caller.
+ *
+ * hint: see libs/list.h for routines of the list structures.
+ */
+static void
+stride_init(struct run_queue *rq) {
+     /* LAB6: 2015011358
+      * (1) init the ready process list: rq->run_list
+      * (2) init the run pool: rq->lab6_run_pool
+      * (3) set number of process: rq->proc_num to 0       
+      */
+	list_init(&rq->run_list);
+	rq->lab6_run_pool = NULL;
+	rq->proc_num = 0;
+}
+
+/*
+ * stride_enqueue inserts the process ``proc'' into the run-queue
+ * ``rq''. The procedure should verify/initialize the relevant members
+ * of ``proc'', and then put the ``lab6_run_pool'' node into the
+ * queue(since we use priority queue here). The procedure should also
+ * update the meta date in ``rq'' structure.
+ *
+ * proc->time_slice denotes the time slices allocation for the
+ * process, which should set to rq->max_time_slice.
+ * 
+ * hint: see libs/skew_heap.h for routines of the priority
+ * queue structures.
+ */
+static void
+stride_enqueue(struct run_queue *rq, struct proc_struct *proc) {
+     /* LAB6: 2015011358
+      * (1) insert the proc into rq correctly
+      * NOTICE: you can use skew_heap or list. Important functions
+      *         skew_heap_insert: insert a entry into skew_heap
+      *         list_add_before: insert  a entry into the last of list   
+      * (2) recalculate proc->time_slice
+      * (3) set proc->rq pointer to rq
+      * (4) increase rq->proc_num
+      */
+	//proc->lab6_stride += BIG_STRIDE / proc->lab6_priority;
+	rq->lab6_run_pool = skew_heap_insert(rq->lab6_run_pool, &proc->lab6_run_pool, proc_stride_comp_f);
+	if (proc->time_slice == 0 || proc->time_slice > rq->max_time_slice) {
+		proc->time_slice = rq->max_time_slice;
+	}
+	proc->rq = rq;
+	rq->proc_num ++;
+}
+
+/*
+ * stride_dequeue removes the process ``proc'' from the run-queue
+ * ``rq'', the operation would be finished by the skew_heap_remove
+ * operations. Remember to update the ``rq'' structure.
+ *
+ * hint: see libs/skew_heap.h for routines of the priority
+ * queue structures.
+ */
+static void
+stride_dequeue(struct run_queue *rq, struct proc_struct *proc) {
+     /* LAB6: 2015011358
+      * (1) remove the proc from rq correctly
+      * NOTICE: you can use skew_heap or list. Important functions
+      *         skew_heap_remove: remove a entry from skew_heap
+      *         list_del_init: remove a entry from the  list
+      */
+	rq->lab6_run_pool = skew_heap_remove(rq->lab6_run_pool, &proc->lab6_run_pool, proc_stride_comp_f);
+	rq->proc_num --;
+}
+/*
+ * stride_pick_next pick the element from the ``run-queue'', with the
+ * minimum value of stride, and returns the corresponding process
+ * pointer. The process pointer would be calculated by macro le2proc,
+ * see kern/process/proc.h for definition. Return NULL if
+ * there is no process in the queue.
+ *
+ * When one proc structure is selected, remember to update the stride
+ * property of the proc. (stride += BIG_STRIDE / priority)
+ *
+ * hint: see libs/skew_heap.h for routines of the priority
+ * queue structures.
+ */
+static struct proc_struct *
+stride_pick_next(struct run_queue *rq) {
+     /* LAB6: 2015011358
+      * (1) get a  proc_struct pointer p  with the minimum value of stride
+             (1.1) If using skew_heap, we can use le2proc get the p from rq->lab6_run_poll
+             (1.2) If using list, we have to search list to find the p with minimum stride value
+      * (2) update p;s stride value: p->lab6_stride
+      * (3) return p
+      */
+	if (rq->lab6_run_pool == NULL) return NULL;
+	struct proc_struct *p = le2proc(rq->lab6_run_pool, lab6_run_pool);
+	p->lab6_stride += BIG_STRIDE / p->lab6_priority;
+	return p;
+}
+
+/*
+ * stride_proc_tick works with the tick event of current process. You
+ * should check whether the time slices for current process is
+ * exhausted and update the proc struct ``proc''. proc->time_slice
+ * denotes the time slices left for current
+ * process. proc->need_resched is the flag variable for process
+ * switching.
+ */
+static void
+stride_proc_tick(struct run_queue *rq, struct proc_struct *proc) {
+     /* LAB6: 2015011358 */
+	if (proc->time_slice > 0) {
+		proc->time_slice --;
+	}
+	if (proc->time_slice == 0) {
+		proc->need_resched = 1;
+	}
+}
+
+struct sched_class default_sched_class = {
+     .name = "stride_scheduler",
+     .init = stride_init,
+     .enqueue = stride_enqueue,
+     .dequeue = stride_dequeue,
+     .pick_next = stride_pick_next,
+     .proc_tick = stride_proc_tick,
+};
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/kern/schedule/sched.c lab7/kern/schedule/sched.c
--- /home/amadeus/ucore_os_lab/labcodes/lab7/kern/schedule/sched.c	2018-03-15 16:55:42.084056346 +0800
+++ lab7/kern/schedule/sched.c	2018-03-22 10:40:40.552821281 +0800
@@ -30,7 +30,7 @@
     return sched_class->pick_next(rq);
 }
 
-static void
+void 
 sched_class_proc_tick(struct proc_struct *proc) {
     if (proc != idleproc) {
         sched_class->proc_tick(rq, proc);
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/kern/schedule/sched.h lab7/kern/schedule/sched.h
--- /home/amadeus/ucore_os_lab/labcodes/lab7/kern/schedule/sched.h	2018-03-15 16:55:42.084056346 +0800
+++ lab7/kern/schedule/sched.h	2018-03-22 10:40:40.552821281 +0800
@@ -69,5 +69,7 @@
 void del_timer(timer_t *timer);     // del timer from timer_list
 void run_timer_list(void);          // call scheduler to update tick related info, and check the timer is expired? If expired, then wakup proc
 
+void sched_class_proc_tick(struct proc_struct *proc);
+
 #endif /* !__KERN_SCHEDULE_SCHED_H__ */
 
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/kern/sync/check_sync.c lab7/kern/sync/check_sync.c
--- /home/amadeus/ucore_os_lab/labcodes/lab7/kern/sync/check_sync.c	2018-03-15 16:55:42.084056346 +0800
+++ lab7/kern/sync/check_sync.c	2018-03-23 09:51:50.340780428 +0800
@@ -181,9 +181,16 @@
 void phi_take_forks_condvar(int i) {
      down(&(mtp->mutex));
 //--------into routine in monitor--------------
-     // LAB7 EXERCISE1: YOUR CODE
+     // LAB7 EXERCISE1: 2015011358
      // I am hungry
      // try to get fork
+      state_condvar[i] = HUNGRY;
+      if (state_condvar[(i + 4) % 5] != EATING && state_condvar[(i + 1) % 5] != EATING) {
+	      state_condvar[i] = EATING;
+      } else {
+	      cprintf("phi_take_forks_condvar: %d didn’t get fork and will wait\n", i);
+	      cond_wait(mtp->cv + i);
+      }
 //--------leave routine in monitor--------------
       if(mtp->next_count>0)
          up(&(mtp->next));
@@ -195,9 +202,13 @@
      down(&(mtp->mutex));
 
 //--------into routine in monitor--------------
-     // LAB7 EXERCISE1: YOUR CODE
+     // LAB7 EXERCISE1: 2015011358
      // I ate over
      // test left and right neighbors
+     state_condvar[i] = THINKING;
+     cprintf("phi_put_forks_condvar: %d finished eating\n", i); // my own output
+     phi_test_condvar((i + N - 1) % N);
+     phi_test_condvar((i + 1) % N);
 //--------leave routine in monitor--------------
      if(mtp->next_count>0)
         up(&(mtp->next));
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/kern/sync/monitor.c lab7/kern/sync/monitor.c
--- /home/amadeus/ucore_os_lab/labcodes/lab7/kern/sync/monitor.c	2018-03-15 16:55:42.084056346 +0800
+++ lab7/kern/sync/monitor.c	2018-03-23 10:02:45.104489852 +0800
@@ -25,7 +25,7 @@
 // Unlock one of threads waiting on the condition variable. 
 void 
 cond_signal (condvar_t *cvp) {
-   //LAB7 EXERCISE1: YOUR CODE
+   //LAB7 EXERCISE1: 2015011358
    cprintf("cond_signal begin: cvp %x, cvp->count %d, cvp->owner->next_count %d\n", cvp, cvp->count, cvp->owner->next_count);  
   /*
    *      cond_signal(cv) {
@@ -37,6 +37,12 @@
    *          }
    *       }
    */
+   if (cvp->count > 0) {
+	   cvp->owner->next_count ++;
+	   up(&cvp->sem);
+	   down(&cvp->owner->next);
+	   cvp->owner->next_count --;
+   }
    cprintf("cond_signal end: cvp %x, cvp->count %d, cvp->owner->next_count %d\n", cvp, cvp->count, cvp->owner->next_count);
 }
 
@@ -44,7 +50,7 @@
 // mutex and suspends calling thread on conditional variable after waking up locks mutex. Notice: mp is mutex semaphore for monitor's procedures
 void
 cond_wait (condvar_t *cvp) {
-    //LAB7 EXERCISE1: YOUR CODE
+    //LAB7 EXERCISE1: 2015011358
     cprintf("cond_wait begin:  cvp %x, cvp->count %d, cvp->owner->next_count %d\n", cvp, cvp->count, cvp->owner->next_count);
    /*
     *         cv.count ++;
@@ -55,5 +61,13 @@
     *         wait(cv.sem);
     *         cv.count --;
     */
+    cvp->count ++;
+    if (cvp->owner->next_count > 0) {
+	    up(&cvp->owner->next);
+    } else {
+	    up(&cvp->owner->mutex);
+    }
+    down(&cvp->sem);
+    cvp->count --;
     cprintf("cond_wait end:  cvp %x, cvp->count %d, cvp->owner->next_count %d\n", cvp, cvp->count, cvp->owner->next_count);
 }
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/kern/trap/trap.c lab7/kern/trap/trap.c
--- /home/amadeus/ucore_os_lab/labcodes/lab7/kern/trap/trap.c	2018-03-15 16:55:42.084056346 +0800
+++ lab7/kern/trap/trap.c	2018-03-22 14:26:33.758469263 +0800
@@ -42,7 +42,7 @@
 /* idt_init - initialize IDT to each of the entry points in kern/trap/vectors.S */
 void
 idt_init(void) {
-     /* LAB1 YOUR CODE : STEP 2 */
+     /* LAB1 2015011358: STEP 2 */
      /* (1) Where are the entry addrs of each Interrupt Service Routine (ISR)?
       *     All ISR's entry addrs are stored in __vectors. where is uintptr_t __vectors[] ?
       *     __vectors[] is in kern/trap/vector.S which is produced by tools/vector.c
@@ -54,9 +54,21 @@
       *     You don't know the meaning of this instruction? just google it! and check the libs/x86.h to know more.
       *     Notice: the argument of lidt is idt_pd. try to find it!
       */
-     /* LAB5 YOUR CODE */ 
+     /* LAB5 2015011358 */ 
      //you should update your lab1 code (just add ONE or TWO lines of code), let user app to use syscall to get the service of ucore
      //so you should setup the syscall interrupt gate in here
+	extern uintptr_t __vectors[];
+	uint32_t kcs = GD_KTEXT; // kernel OS code segment selector
+	for (int i = 0; i < 256; ++ i) {
+		if (i == T_SYSCALL) {
+			SETGATE(idt[i], 1, kcs, __vectors[i], DPL_USER);
+		} else {
+			SETGATE(idt[i], 0, kcs, __vectors[i], DPL_KERNEL);
+		}
+	}
+	// challenge 1: 
+	SETGATE(idt[T_SWITCH_TOK], 1, kcs, __vectors[T_SWITCH_TOK], DPL_USER);
+	lidt(&idt_pd);
 }
 
 static const char *
@@ -183,6 +195,8 @@
 static volatile int in_swap_tick_event = 0;
 extern struct mm_struct *check_mm_struct;
 
+//static uint32_t clock_count = 0;
+
 static void
 trap_dispatch(struct trapframe *tf) {
     char c;
@@ -214,26 +228,38 @@
     LAB3 : If some page replacement algorithm(such as CLOCK PRA) need tick to change the priority of pages,
     then you can add code here. 
 #endif
-        /* LAB1 YOUR CODE : STEP 3 */
+        /* LAB1 2015011358 : STEP 3 */
         /* handle the timer interrupt */
         /* (1) After a timer interrupt, you should record this event using a global variable (increase it), such as ticks in kern/driver/clock.c
          * (2) Every TICK_NUM cycle, you can print some info using a funciton, such as print_ticks().
          * (3) Too Simple? Yes, I think so!
          */
-        /* LAB5 YOUR CODE */
+        /* LAB5 2015011358 */
         /* you should upate you lab1 code (just add ONE or TWO lines of code):
          *    Every TICK_NUM cycle, you should set current process's current->need_resched = 1
          */
-        /* LAB6 YOUR CODE */
+        /* LAB6 2015011358 */
         /* you should upate you lab5 code
          * IMPORTANT FUNCTIONS:
 	     * sched_class_proc_tick
          */         
-        /* LAB7 YOUR CODE */
+        /* LAB7 2015011358 */
         /* you should upate you lab6 code
          * IMPORTANT FUNCTIONS:
 	     * run_timer_list
          */
+	   /*
+	    clock_count ++;
+	    if (clock_count == TICK_NUM) {
+		    clock_count = 0;
+		    //print_ticks();
+		    //print_trapframe(tf);
+	    }
+	    */
+	   ticks ++;
+	   run_timer_list();
+	    //sched_class_proc_tick(current);
+
         break;
     case IRQ_OFFSET + IRQ_COM1:
         c = cons_getc();
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/.matrix.log lab7/.matrix.log
--- /home/amadeus/ucore_os_lab/labcodes/lab7/.matrix.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.matrix.log	2018-03-23 10:04:17.975809556 +0800
@@ -0,0 +1,362 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc010002a (phys)
+  etext  0xc010d3d1 (phys)
+  edata  0xc01c2bb4 (phys)
+  end    0xc01c5e64 (phys)
+Kernel executable memory footprint: 792KB
+ebp:0xc0131f48 eip:0xc0100b45 args:0x00010094 0x00010094 0xc0131f78 0xc01000c5
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc0131f58 eip:0xc0100e31 args:0x00000000 0x00000000 0x00000000 0xc0131fc8
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0131f78 eip:0xc01000c5 args:0x00000000 0xc0131fa0 0xffff0000 0xc0131fa4
+    kern/init/init.c:59: grade_backtrace2+19
+ebp:0xc0131f98 eip:0xc01000e7 args:0x00000000 0xffff0000 0xc0131fc4 0x0000002a
+    kern/init/init.c:64: grade_backtrace1+27
+ebp:0xc0131fb8 eip:0xc0100104 args:0x00000000 0xc010002a 0xffff0000 0xc010006d
+    kern/init/init.c:69: grade_backtrace0+19
+ebp:0xc0131fd8 eip:0xc0100125 args:0x00000000 0x00000000 0x00000000 0xc010d3e0
+    kern/init/init.c:74: grade_backtrace+26
+ebp:0xc0131ff8 eip:0xc010007a args:0x00000000 0x00000000 0x0000ffff 0x40cf9a00
+    kern/init/init.c:33: kern_init+79
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07ee0000, [00100000, 07fdffff], type = 1.
+  memory: 00020000, [07fe0000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31798
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "matrix".
+fork ok.
+pid 13 is running (1000 times)!.
+pid 13 done!.
+pid 15 is running (1100 times)!.
+pid 15 done!.
+pid 17 is running (4600 times)!.
+Iter 1, No.0 philosopher_sema is eating
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 1, No.2 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+pid 14 is running (1000 times)!.
+pid 14 done!.
+pid 19 is running (20600 times)!.
+pid 21 is running (2600 times)!.
+pid 23 is running (37100 times)!.
+pid 25 is running (23500 times)!.
+pid 27 is running (23500 times)!.
+pid 16 is running (1900 times)!.
+pid 18 is running (11000 times)!.
+pid 20 is running (37100 times)!.
+pid 29 is running (33400 times)!.
+pid 31 is running (2600 times)!.
+pid 32 is running (26600 times)!.
+pid 22 is running (13100 times)!.
+pid 24 is running (4600 times)!.
+pid 26 is running (2600 times)!.
+pid 28 is running (4600 times)!.
+pid 30 is running (13100 times)!.
+pid 33 is running (13100 times)!.
+pid 26 done!.
+pid 16 done!.
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.3 philosopher_condvar is eating
+pid 31 done!.
+pid 21 done!.
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.1 philosopher_condvar is eating
+Iter 2, No.2 philosopher_sema is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.0 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+pid 24 done!.
+Iter 3, No.0 philosopher_sema is thinking
+pid 17 done!.
+pid 28 done!.
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.4 philosopher_condvar is eating
+Iter 1, No.4 philosopher_sema is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.3 philosopher_condvar is thinking
+phi_put_forks_condvar: 1 finished eating
+Iter 2, No.1 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is eating
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+Iter 2, No.4 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.3 philosopher_sema is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_sema is thinking
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.0 philosopher_condvar is eating
+Iter 3, No.2 philosopher_sema is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.4 philosopher_condvar is thinking
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+Iter 2, No.4 philosopher_sema is eating
+Iter 4, No.2 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.1 philosopher_condvar is eating
+pid 18 done!.
+Iter 3, No.4 philosopher_sema is thinking
+Iter 3, No.3 philosopher_sema is eating
+Iter 4, No.3 philosopher_sema is thinking
+ppid 30 done!.
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.0 philosopher_condvar is thinking
+phi_put_forks_condvar: 1 finished eating
+Iter 3, No.1 philosopher_condvar is thinking
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.0 philosopher_sema is eating
+Iter 4, No.2 philosopher_sema is eating
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+pid 22 done!.
+No.2 philosopher_sema quit
+id 33 done!.
+No.0 philosopher_sema quit
+Iter 3, No.4 philosopher_sema is eating
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.4 philosopher_condvar is eating
+Iter 4, No.1 philosopher_sema is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.3 philosopher_condvar is thinking
+Iter 3, No.2 philosopher_condvar is eating
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.4 philosopher_sema is thinking
+Iter 4, No.3 philosopher_sema is eating
+No.3 philosopher_sema quit
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_condvar is thinking
+No.1 philosopher_sema quit
+phi_put_forks_condvar: 4 finished eating
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_sema is eating
+Iter 3, No.3 philosopher_condvar is eating
+No.4 philosopher_sema quit
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.0 philosopher_condvar is eating
+pid 19 done!.
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.1 philosopher_condvar is thinking
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.3 philosopher_condvar is thinking
+pid 25 done!.
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+pid 27 done!.
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_condvar is thinking
+phi_put_forks_condvar: 2 finished eating
+No.2 philosopher_condvar quit
+Iter 4, No.1 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+No.1 philosopher_condvar quit
+pid 32 done!.
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.4 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+No.3 philosopher_condvar quit
+phi_put_forks_condvar: 0 finished eating
+No.0 philosopher_condvar quit
+Iter 4, No.4 philosopher_condvar is eating
+phi_put_forks_condvar: 4 finished eating
+No.4 philosopher_condvar quit
+pid 29 done!.
+pid 20 done!.
+pid 23 done!.
+matrix pass.
+all user-mode processes have quit.
+init check memory pass.
+ebp:0xc03a9fc8 eip:0xc0100b45 args:0xc01c5e5c 0xc01c5e5c 0x00000002 0x00000000
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc03a9fe8 eip:0xc010ab2a args:0x00000000 0x00000000 0x00000000 0x00000010
+    kern/process/proc.c:475: do_exit+68
+kernel panic at kern/process/proc.c:475:
+    initproc exit.
+
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/.my_spj.log lab7/.my_spj.log
--- /home/amadeus/ucore_os_lab/labcodes/lab7/.my_spj.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.my_spj.log	2018-03-22 23:27:43.009934849 +0800
@@ -0,0 +1,310 @@
++ cc kern/process/proc.c
++ ld bin/kernel
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc010002a (phys)
+  etext  0xc010d2f0 (phys)
+  edata  0xc01c1bb4 (phys)
+  end    0xc01c4e64 (phys)
+Kernel executable memory footprint: 788KB
+ebp:0xc0130f48 eip:0xc0100b45 args:0x00010094 0x00010094 0xc0130f78 0xc01000c5
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc0130f58 eip:0xc0100e31 args:0x00000000 0x00000000 0x00000000 0xc0130fc8
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0130f78 eip:0xc01000c5 args:0x00000000 0xc0130fa0 0xffff0000 0xc0130fa4
+    kern/init/init.c:59: grade_backtrace2+19
+ebp:0xc0130f98 eip:0xc01000e7 args:0x00000000 0xffff0000 0xc0130fc4 0x0000002a
+    kern/init/init.c:64: grade_backtrace1+27
+ebp:0xc0130fb8 eip:0xc0100104 args:0x00000000 0xc010002a 0xffff0000 0xc010006d
+    kern/init/init.c:69: grade_backtrace0+19
+ebp:0xc0130fd8 eip:0xc0100125 args:0x00000000 0x00000000 0x00000000 0xc010d300
+    kern/init/init.c:74: grade_backtrace+26
+ebp:0xc0130ff8 eip:0xc010007a args:0x00000000 0x00000000 0x0000ffff 0x40cf9a00
+    kern/init/init.c:33: kern_init+79
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07ee0000, [00100000, 07fdffff], type = 1.
+  memory: 00020000, [07fe0000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31799
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+kernel_execve: pid = 2, name = "pgdir".
+I am 2, print pgdir.
+-------------------- BEGIN --------------------
+PDE(001) 00000000-00400000 00400000 urw
+  |-- PTE(00004) 00200000-00204000 00004000 urw
+PDE(001) 00800000-00c00000 00400000 urw
+  |-- PTE(00002) 00800000-00802000 00002000 ur-
+  |-- PTE(00001) 00802000-00803000 00001000 urw
+PDE(001) afc00000-b0000000 00400000 urw
+  |-- PTE(00004) afffc000-b0000000 00004000 urw
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(00001) fac00000-fac01000 00001000 urw
+  |-- PTE(00001) fac02000-fac03000 00001000 urw
+  |-- PTE(00001) faebf000-faec0000 00001000 urw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+pgdir pass.
+Iter 1, No.0 philosopher_condvar is eating
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a628c, cvp->count 0, cvp->owner->next_count 0
+Iter 1, No.2 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a62b4, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a62c8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a62b4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a62b4, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a62b4, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a628c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a628c, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a628c, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a6278, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a6278, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a6278, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a6278, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is eating
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a62c8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a62c8, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a62c8, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a62b4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+Iter 3, No.2 philosopher_condvar is thinking
+Iter 2, No.1 philosopher_condvar is eating
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a6278, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a62b4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a62b4, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a62b4, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.4 philosopher_condvar is thinking
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a6278, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a6278, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a6278, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_condvar is thinking
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a62a0, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a62c8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a62a0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a62a0, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a62a0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.3 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a62c8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a62c8, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a62c8, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a628c, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a62b4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a628c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a628c, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a628c, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a6278, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a62b4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a62b4, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a62b4, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.4 philosopher_condvar is thinking
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a62a0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a6278, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a6278, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a6278, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.1 philosopher_condvar is thinking
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a62c8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a62a0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a62a0, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a62a0, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.3 philosopher_condvar is thinking
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a628c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a62c8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a62c8, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a62c8, cvp->count 0, cvp->owner->next_count 0
+No.0 philosopher_condvar quit
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a62b4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a628c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a628c, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a628c, cvp->count 0, cvp->owner->next_count 0
+No.2 philosopher_condvar quit
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a62b4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a62b4, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a62b4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.4 philosopher_condvar is thinking
+phi_put_forks_condvar: 1 finished eating
+No.1 philosopher_condvar quit
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a62c8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a62c8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a62c8, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a62c8, cvp->count 0, cvp->owner->next_count 0
+No.3 philosopher_condvar quit
+phi_put_forks_condvar: 4 finished eating
+No.4 philosopher_condvar quit
+all user-mode processes have quit.
+init check memory pass.
+ebp:0xc03a8fc8 eip:0xc0100b45 args:0xc01c4e5c 0xc01c4e5c 0x00000002 0x00000000
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc03a8fe8 eip:0xc010aa49 args:0x00000000 0x00000000 0x00000000 0x00000010
+    kern/process/proc.c:475: do_exit+68
+kernel panic at kern/process/proc.c:475:
+    initproc exit.
+
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/my_spj.py lab7/my_spj.py
--- /home/amadeus/ucore_os_lab/labcodes/lab7/my_spj.py	1970-01-01 08:00:00.000000000 +0800
+++ lab7/my_spj.py	2018-03-23 10:04:30.759909329 +0800
@@ -0,0 +1,72 @@
+# my own special judge scripts used to check if correctly solved the philosophers problem
+
+import sys
+import os
+import glob
+import re
+
+HUNGER = 0
+EATING = 1
+THINKING = 2
+
+TIMES = 4
+N = 5
+
+print "now compiling..."
+os.system("make> /dev/null")
+
+'''
+print "now running default scripts..."
+os.system("make grade")
+'''
+
+print "\nnow running special judge..."
+cases = glob.glob("./user/*.c")
+
+for i in range(len(cases)):
+    cases[i] = re.split(r"/", cases[i])[-1][:-2]
+
+hit = 0
+
+for case in cases:
+    state = [THINKING] * N
+    times = [0] * N
+    flag = True
+    reason = ""
+    with open("." + case + ".log", "r") as f:
+        while True:
+            line = f.readline()
+            if line == None or len(line) == 0:
+                break
+
+            if re.search(r"philosopher_condvar is eating", line) != None:
+                x = int(line[len("Iter 4, No.")])
+                if state[x] != EATING and state[(x + N - 1) % N] != EATING and state[(x + 1) % N] != EATING:
+                    state[x] = EATING
+                    times[x] += 1
+                else:
+                    flag = False
+                    reason = "something wrong when eating: state[LEFT]:%s, STATE[x]:%s, STATE[RIGHT]:%s" % (state[(x + N - 1) % N], state[x], state[(x + 1) % N])
+                    break
+
+            if re.search(r"finished eating", line) != None:
+                x = int(line[len("phi_put_forks_condvar: ")])
+                if state[x] == EATING:
+                    state[x] = THINKING
+                else:
+                    flag = False
+                    reason = "something wrong when finished eating: STATE: %s" % (state[x])
+                    break
+        if flag:
+            for i in range(N):
+                if times[i] != TIMES:
+                    flag = False
+                    reason = "times not match, times[%s] = %s" % (i, times[i])
+                    break
+        if flag:
+            hit += 1
+            print "case " + case + ", result: OK"
+        else:
+            print "case " + case + ", result: WRONG, reason: " + reason
+
+print "\ngrade: %s/%s" % (hit, len(cases))
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/.pgdir.log lab7/.pgdir.log
--- /home/amadeus/ucore_os_lab/labcodes/lab7/.pgdir.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.pgdir.log	2018-03-23 10:03:12.360216750 +0800
@@ -0,0 +1,351 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc010002a (phys)
+  etext  0xc010d3d1 (phys)
+  edata  0xc01c2bb4 (phys)
+  end    0xc01c5e64 (phys)
+Kernel executable memory footprint: 792KB
+ebp:0xc0131f48 eip:0xc0100b45 args:0x00010094 0x00010094 0xc0131f78 0xc01000c5
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc0131f58 eip:0xc0100e31 args:0x00000000 0x00000000 0x00000000 0xc0131fc8
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0131f78 eip:0xc01000c5 args:0x00000000 0xc0131fa0 0xffff0000 0xc0131fa4
+    kern/init/init.c:59: grade_backtrace2+19
+ebp:0xc0131f98 eip:0xc01000e7 args:0x00000000 0xffff0000 0xc0131fc4 0x0000002a
+    kern/init/init.c:64: grade_backtrace1+27
+ebp:0xc0131fb8 eip:0xc0100104 args:0x00000000 0xc010002a 0xffff0000 0xc010006d
+    kern/init/init.c:69: grade_backtrace0+19
+ebp:0xc0131fd8 eip:0xc0100125 args:0x00000000 0x00000000 0x00000000 0xc010d3e0
+    kern/init/init.c:74: grade_backtrace+26
+ebp:0xc0131ff8 eip:0xc010007a args:0x00000000 0x00000000 0x0000ffff 0x40cf9a00
+    kern/init/init.c:33: kern_init+79
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07ee0000, [00100000, 07fdffff], type = 1.
+  memory: 00020000, [07fe0000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31798
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "pgdir".
+I am 2, print pgdir.
+-------------------- BEGIN --------------------
+PDE(001) 00000000-00400000 00400000 urw
+  |-- PTE(00004) 00200000-00204000 00004000 urw
+PDE(001) 00800000-00c00000 00400000 urw
+  |-- PTE(00002) 00800000-00802000 00002000 ur-
+  |-- PTE(00001) 00802000-00803000 00001000 urw
+PDE(001) afc00000-b0000000 00400000 urw
+  |-- PTE(00004) afffc000-b0000000 00004000 urw
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(00001) fac00000-fac01000 00001000 urw
+  |-- PTE(00001) fac02000-fac03000 00001000 urw
+  |-- PTE(00001) faebf000-faec0000 00001000 urw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+pgdir pass.
+Iter 1, No.0 philosopher_sema is eating
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 1, No.2 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.3 philosopher_condvar is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is eating
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.2 philosopher_condvar is thinking
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.4 philosopher_condvar is thinking
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_sema is thinking
+Iter 4, No.0 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 1, No.4 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+Iter 2, No.4 philosopher_sema is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.3 philosopher_condvar is thinking
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+No.2 philosopher_sema quit
+Iter 3, No.3 philosopher_sema is eating
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+No.0 philosopher_condvar quit
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+No.0 philosopher_sema quit
+Iter 4, No.1 philosopher_sema is eating
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+No.2 philosopher_condvar quit
+phi_put_forks_condvar: 1 finished eating
+No.1 philosopher_condvar quit
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.3 philosopher_condvar is eating
+No.1 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.3 philosopher_sema is eating
+Iter 3, No.4 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+No.3 philosopher_sema quit
+Iter 3, No.4 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 3 finished eating
+No.3 philosopher_condvar quit
+Iter 4, No.4 philosopher_condvar is eating
+Iter 4, No.4 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+No.4 philosopher_condvar quit
+No.4 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+ebp:0xc03a9fc8 eip:0xc0100b45 args:0xc01c5e5c 0xc01c5e5c 0x00000002 0x00000000
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc03a9fe8 eip:0xc010ab2a args:0x00000000 0x00000000 0x00000000 0x00000010
+    kern/process/proc.c:475: do_exit+68
+kernel panic at kern/process/proc.c:475:
+    initproc exit.
+
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/.priority.log lab7/.priority.log
--- /home/amadeus/ucore_os_lab/labcodes/lab7/.priority.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.priority.log	2018-03-23 10:03:51.659818746 +0800
@@ -0,0 +1,346 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc010002a (phys)
+  etext  0xc010d3d1 (phys)
+  edata  0xc01c2bb4 (phys)
+  end    0xc01c5e64 (phys)
+Kernel executable memory footprint: 792KB
+ebp:0xc0131f48 eip:0xc0100b45 args:0x00010094 0x00010094 0xc0131f78 0xc01000c5
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc0131f58 eip:0xc0100e31 args:0x00000000 0x00000000 0x00000000 0xc0131fc8
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0131f78 eip:0xc01000c5 args:0x00000000 0xc0131fa0 0xffff0000 0xc0131fa4
+    kern/init/init.c:59: grade_backtrace2+19
+ebp:0xc0131f98 eip:0xc01000e7 args:0x00000000 0xffff0000 0xc0131fc4 0x0000002a
+    kern/init/init.c:64: grade_backtrace1+27
+ebp:0xc0131fb8 eip:0xc0100104 args:0x00000000 0xc010002a 0xffff0000 0xc010006d
+    kern/init/init.c:69: grade_backtrace0+19
+ebp:0xc0131fd8 eip:0xc0100125 args:0x00000000 0x00000000 0x00000000 0xc010d3e0
+    kern/init/init.c:74: grade_backtrace+26
+ebp:0xc0131ff8 eip:0xc010007a args:0x00000000 0x00000000 0x0000ffff 0x40cf9a00
+    kern/init/init.c:33: kern_init+79
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07ee0000, [00100000, 07fdffff], type = 1.
+  memory: 00020000, [07fe0000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31798
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "priority".
+priority process will sleep 400 ticks
+Iter 1, No.0 philosopher_sema is eating
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 1, No.2 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.3 philosopher_condvar is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is eating
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.2 philosopher_condvar is thinking
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.4 philosopher_condvar is thinking
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_sema is thinking
+Iter 4, No.0 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 1, No.4 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+Iter 2, No.4 philosopher_sema is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.3 philosopher_condvar is thinking
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+No.2 philosopher_sema quit
+Iter 3, No.3 philosopher_sema is eating
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+No.0 philosopher_condvar quit
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+No.0 philosopher_sema quit
+Iter 4, No.1 philosopher_sema is eating
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+No.2 philosopher_condvar quit
+phi_put_forks_condvar: 1 finished eating
+No.1 philosopher_condvar quit
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.3 philosopher_condvar is eating
+No.1 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.3 philosopher_sema is eating
+Iter 3, No.4 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+No.3 philosopher_sema quit
+Iter 3, No.4 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 3 finished eating
+No.3 philosopher_condvar quit
+Iter 4, No.4 philosopher_condvar is eating
+Iter 4, No.4 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+No.4 philosopher_condvar quit
+No.4 philosopher_sema quit
+main: fork ok,now need to wait pids.
+child pid 17, acc 1948000, time 1401
+child pid 15, acc 1164000, time 1401
+child pid 16, acc 1572000, time 1401
+child pid 13, acc 392000, time 1402
+child pid 14, acc 792000, time 1402
+main: pid 13, acc 392000, time 1402
+main: pid 14, acc 792000, time 1402
+main: pid 15, acc 1164000, time 1402
+main: pid 16, acc 1572000, time 1402
+main: pid 17, acc 1948000, time 1402
+main: wait pids over
+stride sched correct result: 1 2 3 4 5
+all user-mode processes have quit.
+init check memory pass.
+ebp:0xc03a9fc8 eip:0xc0100b45 args:0xc01c5e5c 0xc01c5e5c 0x00000002 0x00000000
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc03a9fe8 eip:0xc010ab2a args:0x00000000 0x00000000 0x00000000 0x00000010
+    kern/process/proc.c:475: do_exit+68
+kernel panic at kern/process/proc.c:475:
+    initproc exit.
+
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/.sleepkill.log lab7/.sleepkill.log
--- /home/amadeus/ucore_os_lab/labcodes/lab7/.sleepkill.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.sleepkill.log	2018-03-23 10:04:06.767717685 +0800
@@ -0,0 +1,340 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc010002a (phys)
+  etext  0xc010d3d1 (phys)
+  edata  0xc01c2bb4 (phys)
+  end    0xc01c5e64 (phys)
+Kernel executable memory footprint: 792KB
+ebp:0xc0131f48 eip:0xc0100b45 args:0x00010094 0x00010094 0xc0131f78 0xc01000c5
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc0131f58 eip:0xc0100e31 args:0x00000000 0x00000000 0x00000000 0xc0131fc8
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0131f78 eip:0xc01000c5 args:0x00000000 0xc0131fa0 0xffff0000 0xc0131fa4
+    kern/init/init.c:59: grade_backtrace2+19
+ebp:0xc0131f98 eip:0xc01000e7 args:0x00000000 0xffff0000 0xc0131fc4 0x0000002a
+    kern/init/init.c:64: grade_backtrace1+27
+ebp:0xc0131fb8 eip:0xc0100104 args:0x00000000 0xc010002a 0xffff0000 0xc010006d
+    kern/init/init.c:69: grade_backtrace0+19
+ebp:0xc0131fd8 eip:0xc0100125 args:0x00000000 0x00000000 0x00000000 0xc010d3e0
+    kern/init/init.c:74: grade_backtrace+26
+ebp:0xc0131ff8 eip:0xc010007a args:0x00000000 0x00000000 0x0000ffff 0x40cf9a00
+    kern/init/init.c:33: kern_init+79
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07ee0000, [00100000, 07fdffff], type = 1.
+  memory: 00020000, [07fe0000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31798
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "sleepkill".
+Iter 1, No.0 philosopher_sema is eating
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 1, No.2 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.3 philosopher_condvar is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is eating
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.2 philosopher_condvar is thinking
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.4 philosopher_condvar is thinking
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_sema is thinking
+Iter 3, No.3 philosopher_sema is eating
+Iter 4, No.0 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.0 philosopher_sema is eating
+Iter 4, No.3 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.3 philosopher_condvar is thinking
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.1 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.0 philosopher_condvar is eating
+No.2 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is eating
+No.0 philosopher_sema quit
+Iter 4, No.1 philosopher_sema is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.4 philosopher_condvar is thinking
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+No.2 philosopher_condvar quit
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.1 philosopher_condvar is eating
+No.3 philosopher_sema quit
+Iter 1, No.4 philosopher_sema is eating
+No.1 philosopher_sema quit
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+No.0 philosopher_condvar quit
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.3 philosopher_condvar is thinking
+sleepkill pass.
+Iter 2, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 1 finished eating
+No.1 philosopher_condvar quit
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 2, No.4 philosopher_sema is eating
+phi_put_forks_condvar: 3 finished eating
+No.3 philosopher_condvar quit
+Iter 4, No.4 philosopher_condvar is eating
+Iter 3, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 4 finished eating
+No.4 philosopher_condvar quit
+Iter 3, No.4 philosopher_sema is eating
+Iter 4, No.4 philosopher_sema is thinking
+Iter 4, No.4 philosopher_sema is eating
+No.4 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+ebp:0xc03a9fc8 eip:0xc0100b45 args:0xc01c5e5c 0xc01c5e5c 0x00000002 0x00000000
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc03a9fe8 eip:0xc010ab2a args:0x00000000 0x00000000 0x00000000 0x00000010
+    kern/process/proc.c:475: do_exit+68
+kernel panic at kern/process/proc.c:475:
+    initproc exit.
+
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/.sleep.log lab7/.sleep.log
--- /home/amadeus/ucore_os_lab/labcodes/lab7/.sleep.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.sleep.log	2018-03-23 10:04:03.419699298 +0800
@@ -0,0 +1,344 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc010002a (phys)
+  etext  0xc010d3d1 (phys)
+  edata  0xc01c2bb4 (phys)
+  end    0xc01c5e64 (phys)
+Kernel executable memory footprint: 792KB
+ebp:0xc0131f48 eip:0xc0100b45 args:0x00010094 0x00010094 0xc0131f78 0xc01000c5
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc0131f58 eip:0xc0100e31 args:0x00000000 0x00000000 0x00000000 0xc0131fc8
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0131f78 eip:0xc01000c5 args:0x00000000 0xc0131fa0 0xffff0000 0xc0131fa4
+    kern/init/init.c:59: grade_backtrace2+19
+ebp:0xc0131f98 eip:0xc01000e7 args:0x00000000 0xffff0000 0xc0131fc4 0x0000002a
+    kern/init/init.c:64: grade_backtrace1+27
+ebp:0xc0131fb8 eip:0xc0100104 args:0x00000000 0xc010002a 0xffff0000 0xc010006d
+    kern/init/init.c:69: grade_backtrace0+19
+ebp:0xc0131fd8 eip:0xc0100125 args:0x00000000 0x00000000 0x00000000 0xc010d3e0
+    kern/init/init.c:74: grade_backtrace+26
+ebp:0xc0131ff8 eip:0xc010007a args:0x00000000 0x00000000 0x0000ffff 0x40cf9a00
+    kern/init/init.c:33: kern_init+79
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07ee0000, [00100000, 07fdffff], type = 1.
+  memory: 00020000, [07fe0000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31798
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "sleep".
+Iter 1, No.0 philosopher_sema is eating
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 1, No.2 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.3 philosopher_condvar is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is eating
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.2 philosopher_condvar is thinking
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.4 philosopher_condvar is thinking
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_sema is thinking
+Iter 4, No.0 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 1, No.4 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+Iter 2, No.4 philosopher_sema is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.3 philosopher_condvar is thinking
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+No.2 philosopher_sema quit
+Iter 3, No.3 philosopher_sema is eating
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+No.0 philosopher_condvar quit
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+No.0 philosopher_sema quit
+Iter 4, No.1 philosopher_sema is eating
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+No.2 philosopher_condvar quit
+phi_put_forks_condvar: 1 finished eating
+No.1 philosopher_condvar quit
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.3 philosopher_condvar is eating
+No.1 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.4 philosopher_condvar is thinking
+sleep 1 x 100 slices.
+Iter 3, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.3 philosopher_sema is eating
+Iter 3, No.4 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+No.3 philosopher_sema quit
+Iter 3, No.4 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 3 finished eating
+No.3 philosopher_condvar quit
+Iter 4, No.4 philosopher_condvar is eating
+Iter 4, No.4 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+No.4 philosopher_condvar quit
+No.4 philosopher_sema quit
+sleep 2 x 100 slices.
+sleep 3 x 100 slices.
+sleep 4 x 100 slices.
+sleep 5 x 100 slices.
+sleep 6 x 100 slices.
+sleep 7 x 100 slices.
+sleep 8 x 100 slices.
+sleep 9 x 100 slices.
+sleep 10 x 100 slices.
+use 1000 msecs.
+sleep pass.
+all user-mode processes have quit.
+init check memory pass.
+ebp:0xc03a9fc8 eip:0xc0100b45 args:0xc01c5e5c 0xc01c5e5c 0x00000002 0x00000000
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc03a9fe8 eip:0xc010ab2a args:0x00000000 0x00000000 0x00000000 0x00000010
+    kern/process/proc.c:475: do_exit+68
+kernel panic at kern/process/proc.c:475:
+    initproc exit.
+
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/.softint.log lab7/.softint.log
--- /home/amadeus/ucore_os_lab/labcodes/lab7/.softint.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.softint.log	2018-03-23 10:03:00.640334497 +0800
@@ -0,0 +1,353 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc010002a (phys)
+  etext  0xc010d3d1 (phys)
+  edata  0xc01c2bb4 (phys)
+  end    0xc01c5e64 (phys)
+Kernel executable memory footprint: 792KB
+ebp:0xc0131f48 eip:0xc0100b45 args:0x00010094 0x00010094 0xc0131f78 0xc01000c5
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc0131f58 eip:0xc0100e31 args:0x00000000 0x00000000 0x00000000 0xc0131fc8
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0131f78 eip:0xc01000c5 args:0x00000000 0xc0131fa0 0xffff0000 0xc0131fa4
+    kern/init/init.c:59: grade_backtrace2+19
+ebp:0xc0131f98 eip:0xc01000e7 args:0x00000000 0xffff0000 0xc0131fc4 0x0000002a
+    kern/init/init.c:64: grade_backtrace1+27
+ebp:0xc0131fb8 eip:0xc0100104 args:0x00000000 0xc010002a 0xffff0000 0xc010006d
+    kern/init/init.c:69: grade_backtrace0+19
+ebp:0xc0131fd8 eip:0xc0100125 args:0x00000000 0x00000000 0x00000000 0xc010d3e0
+    kern/init/init.c:74: grade_backtrace+26
+ebp:0xc0131ff8 eip:0xc010007a args:0x00000000 0x00000000 0x0000ffff 0x40cf9a00
+    kern/init/init.c:33: kern_init+79
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07ee0000, [00100000, 07fdffff], type = 1.
+  memory: 00020000, [07fe0000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31798
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "softint".
+trapframe at 0xc03b0fb4
+  edi  0x00000000
+  esi  0x00000000
+  ebp  0xafffffa8
+  oesp 0xc03b0fd4
+  ebx  0x00000000
+  edx  0x00000000
+  ecx  0xafffffc0
+  eax  0x00000000
+  ds   0x----0023
+  es   0x----0023
+  fs   0x----0000
+  gs   0x----0000
+  trap 0x0000000d General Protection
+  err  0x00000072
+  eip  0x00800f64
+  cs   0x----001b
+  flag 0x00000286 PF,SF,IF,IOPL=0
+  esp  0xafffffa0
+  ss   0x----0023
+unhandled trap.
+Iter 1, No.0 philosopher_sema is eating
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 1, No.2 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.3 philosopher_condvar is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is eating
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.2 philosopher_condvar is thinking
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.4 philosopher_condvar is thinking
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_sema is thinking
+Iter 4, No.0 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 1, No.4 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+Iter 2, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 1 finished eating
+Iter 4, No.1 philosopher_condvar is thinking
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_sema is eating
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.3 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+No.2 philosopher_sema quit
+Iter 3, No.3 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.4 philosopher_condvar is thinking
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.3 philosopher_condvar is eating
+No.0 philosopher_sema quit
+Iter 4, No.1 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+No.2 philosopher_condvar quit
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+No.1 philosopher_sema quit
+phi_put_forks_condvar: 3 finished eating
+Iter 4, No.3 philosopher_condvar is thinking
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.4 philosopher_condvar is eating
+Iter 4, No.3 philosopher_sema is thinking
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.1 philosopher_condvar is eating
+Iter 2, No.4 philosopher_sema is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+No.0 philosopher_condvar quit
+Iter 3, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 4 finished eating
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.3 philosopher_sema is eating
+phi_put_forks_condvar: 1 finished eating
+No.1 philosopher_condvar quit
+Iter 4, No.3 philosopher_condvar is eating
+phi_put_forks_condvar: 3 finished eating
+No.3 philosopher_condvar quit
+Iter 4, No.4 philosopher_condvar is eating
+No.3 philosopher_sema quit
+Iter 3, No.4 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+No.4 philosopher_condvar quit
+Iter 4, No.4 philosopher_sema is thinking
+Iter 4, No.4 philosopher_sema is eating
+No.4 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+ebp:0xc03a9fc8 eip:0xc0100b45 args:0xc01c5e5c 0xc01c5e5c 0x00000002 0x00000000
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc03a9fe8 eip:0xc010ab2a args:0x00000000 0x00000000 0x00000000 0x00000010
+    kern/process/proc.c:475: do_exit+68
+kernel panic at kern/process/proc.c:475:
+    initproc exit.
+
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/.spin.log lab7/.spin.log
--- /home/amadeus/ucore_os_lab/labcodes/lab7/.spin.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.spin.log	2018-03-23 10:03:25.236086872 +0800
@@ -0,0 +1,353 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc010002a (phys)
+  etext  0xc010d3d1 (phys)
+  edata  0xc01c2bb4 (phys)
+  end    0xc01c5e64 (phys)
+Kernel executable memory footprint: 792KB
+ebp:0xc0131f48 eip:0xc0100b45 args:0x00010094 0x00010094 0xc0131f78 0xc01000c5
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc0131f58 eip:0xc0100e31 args:0x00000000 0x00000000 0x00000000 0xc0131fc8
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0131f78 eip:0xc01000c5 args:0x00000000 0xc0131fa0 0xffff0000 0xc0131fa4
+    kern/init/init.c:59: grade_backtrace2+19
+ebp:0xc0131f98 eip:0xc01000e7 args:0x00000000 0xffff0000 0xc0131fc4 0x0000002a
+    kern/init/init.c:64: grade_backtrace1+27
+ebp:0xc0131fb8 eip:0xc0100104 args:0x00000000 0xc010002a 0xffff0000 0xc010006d
+    kern/init/init.c:69: grade_backtrace0+19
+ebp:0xc0131fd8 eip:0xc0100125 args:0x00000000 0x00000000 0x00000000 0xc010d3e0
+    kern/init/init.c:74: grade_backtrace+26
+ebp:0xc0131ff8 eip:0xc010007a args:0x00000000 0x00000000 0x0000ffff 0x40cf9a00
+    kern/init/init.c:33: kern_init+79
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07ee0000, [00100000, 07fdffff], type = 1.
+  memory: 00020000, [07fe0000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31798
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "spin".
+I am the parent. Forking the child...
+I am the parent. Running the child...
+I am the child. spinning ...
+Iter 1, No.0 philosopher_sema is eating
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 1, No.2 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.3 philosopher_condvar is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.1 philosopher_condvar is eating
+I am the parent.  Killing the child...
+kill returns 0
+wait returns 0
+spin may pass.
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.0 philosopher_condvar is thinking
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.3 philosopher_condvar is thinking
+phi_put_forks_condvar: 1 finished eating
+Iter 2, No.1 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is eating
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.4 philosopher_condvar is thinking
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.1 philosopher_condvar is eating
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.0 philosopher_sema is eating
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.3 philosopher_condvar is thinking
+Iter 4, No.2 philosopher_sema is thinking
+Iter 3, No.3 philosopher_sema is eating
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.2 philosopher_condvar is eating
+Iter 4, No.0 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.4 philosopher_condvar is thinking
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.0 philosopher_sema is eating
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.3 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+No.2 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is eating
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+No.0 philosopher_sema quit
+Iter 4, No.1 philosopher_sema is eating
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.3 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.1 philosopher_condvar is thinking
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.0 philosopher_condvar is eating
+No.3 philosopher_sema quit
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.4 philosopher_condvar is thinking
+No.1 philosopher_sema quit
+Iter 1, No.4 philosopher_sema is eating
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+No.2 philosopher_condvar quit
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+No.0 philosopher_condvar quit
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+No.3 philosopher_condvar quit
+phi_put_forks_condvar: 1 finished eating
+No.1 philosopher_condvar quit
+Iter 2, No.4 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+No.4 philosopher_condvar quit
+Iter 3, No.4 philosopher_sema is thinking
+Iter 3, No.4 philosopher_sema is eating
+Iter 4, No.4 philosopher_sema is thinking
+Iter 4, No.4 philosopher_sema is eating
+No.4 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+ebp:0xc03a9fc8 eip:0xc0100b45 args:0xc01c5e5c 0xc01c5e5c 0x00000002 0x00000000
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc03a9fe8 eip:0xc010ab2a args:0x00000000 0x00000000 0x00000000 0x00000010
+    kern/process/proc.c:475: do_exit+68
+kernel panic at kern/process/proc.c:475:
+    initproc exit.
+
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/.testbss.log lab7/.testbss.log
--- /home/amadeus/ucore_os_lab/labcodes/lab7/.testbss.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.testbss.log	2018-03-23 10:03:09.012250434 +0800
@@ -0,0 +1,156 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc010002a (phys)
+  etext  0xc010d3d1 (phys)
+  edata  0xc01c2bb4 (phys)
+  end    0xc01c5e64 (phys)
+Kernel executable memory footprint: 792KB
+ebp:0xc0131f48 eip:0xc0100b45 args:0x00010094 0x00010094 0xc0131f78 0xc01000c5
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc0131f58 eip:0xc0100e31 args:0x00000000 0x00000000 0x00000000 0xc0131fc8
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0131f78 eip:0xc01000c5 args:0x00000000 0xc0131fa0 0xffff0000 0xc0131fa4
+    kern/init/init.c:59: grade_backtrace2+19
+ebp:0xc0131f98 eip:0xc01000e7 args:0x00000000 0xffff0000 0xc0131fc4 0x0000002a
+    kern/init/init.c:64: grade_backtrace1+27
+ebp:0xc0131fb8 eip:0xc0100104 args:0x00000000 0xc010002a 0xffff0000 0xc010006d
+    kern/init/init.c:69: grade_backtrace0+19
+ebp:0xc0131fd8 eip:0xc0100125 args:0x00000000 0x00000000 0x00000000 0xc010d3e0
+    kern/init/init.c:74: grade_backtrace+26
+ebp:0xc0131ff8 eip:0xc010007a args:0x00000000 0x00000000 0x0000ffff 0x40cf9a00
+    kern/init/init.c:33: kern_init+79
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07ee0000, [00100000, 07fdffff], type = 1.
+  memory: 00020000, [07fe0000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31798
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "testbss".
+Making sure bss works right...
+Yes, good.  Now doing a wild write off the end...
+testbss may pass.
+not valid addr c03020, and  can not find it in vma
+trapframe at 0xc03b0fb4
+  edi  0x00000000
+  esi  0x00000000
+  ebp  0xafffffa8
+  oesp 0xc03b0fd4
+  ebx  0x00000000
+  edx  0x008013fa
+  ecx  0xaffffed8
+  eax  0x00000012
+  ds   0x----0023
+  es   0x----0023
+  fs   0x----0000
+  gs   0x----0000
+  trap 0x0000000e Page Fault
+  err  0x00000006
+  eip  0x0080102a
+  cs   0x----001b
+  flag 0x00000286 PF,SF,IF,IOPL=0
+  esp  0xafffff90
+  ss   0x----0023
+killed by kernel.
+ebp:0xc03b0f58 eip:0xc0100b45 args:0x00000000 0x00000000 0xc03b0f88 0xfffffffd
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc03b0f78 eip:0xc0102949 args:0xc03b0fb4 0x00000000 0xc03b0fa8 0xc0102ad1
+    kern/trap/trap.c:218: trap_dispatch+258
+ebp:0xc03b0fa8 eip:0xc0102a90 args:0xc03b0fb4 0x00000000 0x00000000 0xafffffa8
+    kern/trap/trap.c:312: trap+80
+ebp:0xafffffa8 eip:0xc010355a args:0x00000000 0x00000000 0x00000000 0x00800380
+    kern/trap/trapentry.S:24: <unknown>+0
+ebp:0xafffffd8 eip:0x00800380 args:0x00000000 0x00000000 0x00000000 0x00000000
+    user/libs/umain.c:7: umain+10
+kernel panic at kern/trap/trap.c:218:
+    handle user mode pgfault failed. ret=-3
+
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/tools/gdbinit lab7/tools/gdbinit
--- /home/amadeus/ucore_os_lab/labcodes/lab7/tools/gdbinit	2018-03-15 16:55:42.084056346 +0800
+++ lab7/tools/gdbinit	2018-03-22 10:40:40.556821716 +0800
@@ -1,3 +1,4 @@
 file bin/kernel
 target remote :1234
 break kern_init
+continue
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/.waitkill.log lab7/.waitkill.log
--- /home/amadeus/ucore_os_lab/labcodes/lab7/.waitkill.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.waitkill.log	2018-03-23 10:03:29.472044029 +0800
@@ -0,0 +1,302 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc010002a (phys)
+  etext  0xc010d3d1 (phys)
+  edata  0xc01c2bb4 (phys)
+  end    0xc01c5e64 (phys)
+Kernel executable memory footprint: 792KB
+ebp:0xc0131f48 eip:0xc0100b45 args:0x00010094 0x00010094 0xc0131f78 0xc01000c5
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc0131f58 eip:0xc0100e31 args:0x00000000 0x00000000 0x00000000 0xc0131fc8
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0131f78 eip:0xc01000c5 args:0x00000000 0xc0131fa0 0xffff0000 0xc0131fa4
+    kern/init/init.c:59: grade_backtrace2+19
+ebp:0xc0131f98 eip:0xc01000e7 args:0x00000000 0xffff0000 0xc0131fc4 0x0000002a
+    kern/init/init.c:64: grade_backtrace1+27
+ebp:0xc0131fb8 eip:0xc0100104 args:0x00000000 0xc010002a 0xffff0000 0xc010006d
+    kern/init/init.c:69: grade_backtrace0+19
+ebp:0xc0131fd8 eip:0xc0100125 args:0x00000000 0x00000000 0x00000000 0xc010d3e0
+    kern/init/init.c:74: grade_backtrace+26
+ebp:0xc0131ff8 eip:0xc010007a args:0x00000000 0x00000000 0x0000ffff 0x40cf9a00
+    kern/init/init.c:33: kern_init+79
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07ee0000, [00100000, 07fdffff], type = 1.
+  memory: 00020000, [07fe0000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31798
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "waitkill".
+wait child 1.
+child 2.
+child 1.
+Iter 1, No.0 philosopher_sema is eating
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 1, No.2 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.3 philosopher_condvar is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.1 philosopher_condvar is eating
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.0 philosopher_condvar is thinking
+phi_put_forks_condvar: 1 finished eating
+Iter 2, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.4 philosopher_condvar is eating
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is eating
+phi_put_forks_condvar: 4 finished eating
+Iter 2, No.4 philosopher_condvar is thinking
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.0 philosopher_condvar is eating
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+Iter 3, No.2 philosopher_condvar is thinking
+Iter 2, No.3 philosopher_condvar is eating
+kill parent ok.
+Iter 4, No.2 philosopher_sema is thinking
+Iter 3, No.3 philosopher_sema is eating
+Iter 4, No.0 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+phi_put_forks_condvar: 3 finished eating
+Iter 3, No.3 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.4 philosopher_condvar is eating
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.0 philosopher_sema is eating
+Iter 4, No.3 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.1 philosopher_condvar is eating
+No.2 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is eating
+No.0 philosopher_sema quit
+Iter 4, No.1 philosopher_sema is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.0 philosopher_condvar is thinking
+No.1 philosopher_sema quit
+No.3 philosopher_sema quit
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 1, No.4 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.3 philosopher_condvar is eating
+phi_put_forks_condvar: 1 finished eating
+Iter 3, No.1 philosopher_condvar is thinking
+Iter 3, No.0 philosopher_condvar is eating
+Iter 2, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 0 finished eating
+Iter 4, No.0 philosopher_condvar is thinking
+kill child1 ok.
+Iter 3, No.1 philosopher_condvar is eating
+phi_put_forks_condvar: 3 finished eating
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_condvar is eating
+Iter 2, No.4 philosopher_sema is eating
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.4 philosopher_condvar is thinking
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.1 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is thinking
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+No.0 philosopher_condvar quit
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+No.3 philosopher_condvar quit
+Iter 3, No.4 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+No.4 philosopher_condvar quit
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+No.1 philosopher_condvar quit
+Iter 4, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 2 finished eating
+Iter 4, No.2 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_sema is eating
+Iter 4, No.2 philosopher_condvar is eating
+No.4 philosopher_sema quit
+phi_put_forks_condvar: 2 finished eating
+No.2 philosopher_condvar quit
+all user-mode processes have quit.
+init check memory pass.
+ebp:0xc03a9fc8 eip:0xc0100b45 args:0xc01c5e5c 0xc01c5e5c 0x00000002 0x00000000
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc03a9fe8 eip:0xc010ab2a args:0x00000000 0x00000000 0x00000000 0x00000010
+    kern/process/proc.c:475: do_exit+68
+kernel panic at kern/process/proc.c:475:
+    initproc exit.
+
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P /home/amadeus/ucore_os_lab/labcodes/lab7/.yield.log lab7/.yield.log
--- /home/amadeus/ucore_os_lab/labcodes/lab7/.yield.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.yield.log	2018-03-23 10:03:15.572184402 +0800
@@ -0,0 +1,340 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc010002a (phys)
+  etext  0xc010d3d1 (phys)
+  edata  0xc01c2bb4 (phys)
+  end    0xc01c5e64 (phys)
+Kernel executable memory footprint: 792KB
+ebp:0xc0131f48 eip:0xc0100b45 args:0x00010094 0x00010094 0xc0131f78 0xc01000c5
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc0131f58 eip:0xc0100e31 args:0x00000000 0x00000000 0x00000000 0xc0131fc8
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0131f78 eip:0xc01000c5 args:0x00000000 0xc0131fa0 0xffff0000 0xc0131fa4
+    kern/init/init.c:59: grade_backtrace2+19
+ebp:0xc0131f98 eip:0xc01000e7 args:0x00000000 0xffff0000 0xc0131fc4 0x0000002a
+    kern/init/init.c:64: grade_backtrace1+27
+ebp:0xc0131fb8 eip:0xc0100104 args:0x00000000 0xc010002a 0xffff0000 0xc010006d
+    kern/init/init.c:69: grade_backtrace0+19
+ebp:0xc0131fd8 eip:0xc0100125 args:0x00000000 0x00000000 0x00000000 0xc010d3e0
+    kern/init/init.c:74: grade_backtrace+26
+ebp:0xc0131ff8 eip:0xc010007a args:0x00000000 0x00000000 0x0000ffff 0x40cf9a00
+    kern/init/init.c:33: kern_init+79
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07ee0000, [00100000, 07fdffff], type = 1.
+  memory: 00020000, [07fe0000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31798
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "yield".
+Hello, I am process 2.
+Back in process 2, iteration 0.
+Back in process 2, iteration 1.
+Back in process 2, iteration 2.
+Back in process 2, iteration 3.
+Back in process 2, iteration 4.
+All done in process 2.
+yield pass.
+Iter 1, No.0 philosopher_sema is eating
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 1, No.2 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.3 philosopher_condvar is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is eating
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 1, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.0 philosopher_condvar is thinking
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.2 philosopher_condvar is thinking
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_condvar is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 2, No.4 philosopher_condvar is thinking
+phi_take_forks_condvar: 4 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_sema is thinking
+Iter 4, No.0 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 1, No.4 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.2 philosopher_condvar is thinking
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+Iter 2, No.4 philosopher_sema is thinking
+phi_take_forks_condvar: 0 didn’t get fork and will wait
+cond_wait begin:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+phi_take_forks_condvar: 2 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 1 finished eating
+phi_test_condvar: state_condvar[0] will eating
+phi_test_condvar: signal self_cv[0] 
+cond_signal begin: cvp c03a7688, cvp->count 1, cvp->owner->next_count 0
+Iter 4, No.0 philosopher_sema is eating
+cond_wait end:  cvp c03a7688, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.0 philosopher_condvar is eating
+cond_signal end: cvp c03a7688, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.1 philosopher_condvar is thinking
+phi_put_forks_condvar: 3 finished eating
+phi_test_condvar: state_condvar[2] will eating
+phi_test_condvar: signal self_cv[2] 
+cond_signal begin: cvp c03a76b0, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76b0, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.2 philosopher_condvar is eating
+cond_signal end: cvp c03a76b0, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.3 philosopher_condvar is thinking
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 0 finished eating
+phi_test_condvar: state_condvar[4] will eating
+phi_test_condvar: signal self_cv[4] 
+cond_signal begin: cvp c03a76d8, cvp->count 1, cvp->owner->next_count 0
+No.2 philosopher_sema quit
+Iter 3, No.3 philosopher_sema is eating
+cond_wait end:  cvp c03a76d8, cvp->count 0, cvp->owner->next_count 1
+Iter 2, No.4 philosopher_condvar is eating
+cond_signal end: cvp c03a76d8, cvp->count 0, cvp->owner->next_count 0
+No.0 philosopher_condvar quit
+phi_take_forks_condvar: 1 didn’t get fork and will wait
+cond_wait begin:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 2 finished eating
+phi_test_condvar: state_condvar[1] will eating
+phi_test_condvar: signal self_cv[1] 
+cond_signal begin: cvp c03a769c, cvp->count 1, cvp->owner->next_count 0
+No.0 philosopher_sema quit
+Iter 4, No.1 philosopher_sema is eating
+cond_wait end:  cvp c03a769c, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.1 philosopher_condvar is eating
+cond_signal end: cvp c03a769c, cvp->count 0, cvp->owner->next_count 0
+No.2 philosopher_condvar quit
+phi_put_forks_condvar: 1 finished eating
+No.1 philosopher_condvar quit
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 3, No.3 philosopher_condvar is eating
+No.1 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 3 finished eating
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.3 philosopher_sema is eating
+Iter 3, No.4 philosopher_condvar is eating
+phi_take_forks_condvar: 3 didn’t get fork and will wait
+cond_wait begin:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+phi_put_forks_condvar: 4 finished eating
+phi_test_condvar: state_condvar[3] will eating
+phi_test_condvar: signal self_cv[3] 
+cond_signal begin: cvp c03a76c4, cvp->count 1, cvp->owner->next_count 0
+No.3 philosopher_sema quit
+Iter 3, No.4 philosopher_sema is eating
+cond_wait end:  cvp c03a76c4, cvp->count 0, cvp->owner->next_count 1
+Iter 4, No.3 philosopher_condvar is eating
+cond_signal end: cvp c03a76c4, cvp->count 0, cvp->owner->next_count 0
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_sema is thinking
+phi_put_forks_condvar: 3 finished eating
+No.3 philosopher_condvar quit
+Iter 4, No.4 philosopher_condvar is eating
+Iter 4, No.4 philosopher_sema is eating
+phi_put_forks_condvar: 4 finished eating
+No.4 philosopher_condvar quit
+No.4 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+ebp:0xc03a9fc8 eip:0xc0100b45 args:0xc01c5e5c 0xc01c5e5c 0x00000002 0x00000000
+    kern/debug/kdebug.c:351: print_stackframe+22
+ebp:0xc03a9fe8 eip:0xc010ab2a args:0x00000000 0x00000000 0x00000000 0x00000010
+    kern/process/proc.c:475: do_exit+68
+kernel panic at kern/process/proc.c:475:
+    initproc exit.
+
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
